{
    "/search-?q=test&patternType=literal&case=yes-": {
        "status": 200,
        "contentType": "text/html; charset=utf-8",
        "body": "<!doctype html>\n<html lang=\"en\" class=\"base\">\n\n<head>\n\t\n\t<meta charset=\"utf-8\">\n\t<meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n\t<meta name=\"google\" content=\"notranslate\">\n\t<meta http-equiv=\"Content-Language\" content=\"en\">\n\t<meta name=\"viewport\" content=\"width=device-width, viewport-fit=cover\" />\n\t\n\t<meta name='description' content=\"Sourcegraph is a web-based code search and navigation tool for dev teams. Search, navigate, and review code. Find answers.\" />\n\t\t\n\t\n\t<title>test - Sourcegraph</title>\n\t\n\t<link id='sourcegraph-chrome-webstore-item' rel=\"chrome-webstore-item\" href=\"https://chrome.google.com/webstore/detail/dgjhfomjieaadpoljlnidmbgkdffpack\">\n\t<link rel=\"search\" href=\"/opensearch.xml\" type=\"application/opensearchdescription+xml\" title=\"Sourcegraph Search\">\n\t<script ignore-csp>\n\t\twindow.context = {\"externalURL\":\"http://localhost:3080/\",\"xhrHeaders\":{\"X-Csrf-Token\":\"F7iicXCIO4S/OcQ7/95Lx/C7OCjJYFcgcN5TOqm8lSOURmx65gUWCUByFf5pxYXUD9uDJ4zFnc4yrhvEFISjjw==\",\"X-Requested-With\":\"Sourcegraph\",\"x-sourcegraph-client\":\"http://localhost:3080/\"},\"csrfToken\":\"F7iicXCIO4S/OcQ7/95Lx/C7OCjJYFcgcN5TOqm8lSOURmx65gUWCUByFf5pxYXUD9uDJ4zFnc4yrhvEFISjjw==\",\"userAgentIsBot\":false,\"assetsRoot\":\"/.assets\",\"version\":\"0.0.0+dev\",\"isAuthenticatedUser\":true,\"sentryDSN\":null,\"siteID\":\"bc6b8f71-21e7-45ba-a867-05bb6b099040\",\"siteGQLID\":\"U2l0ZToic2l0ZSI=\",\"debug\":true,\"showOnboarding\":false,\"emailEnabled\":false,\"site\":{\"update.channel\":\"release\"},\"likelyDockerOnMac\":false,\"needServerRestart\":false,\"deployType\":\"dev\",\"sourcegraphDotComMode\":false,\"billingPublishableKey\":\"pk_test_0b1ei45h7ypIEeAkXYKBU059\",\"accessTokensAllow\":\"all-users-create\",\"allowSignup\":false,\"resetPasswordEnabled\":true,\"authProviders\":[{\"isBuiltin\":true,\"displayName\":\"Builtin username-password authentication\",\"authenticationURL\":\"\"}],\"branding\":null,\"experimentalFeatures\":{\"discussions\":\"enabled\"}}\n\t\twindow.pageError =  null \n\t</script>\n\t\n</head>\n\n<body>\n\t\n\t<div id=\"root\"></div>\n\t<noscript>\n\t\t<p>Sourcegraph is a web-based code search and navigation tool for dev teams. Search, navigate, and review code. Find answers.</p>\n\n\t\t<br>\n\t\t<br>\n\t\t<br>\n\t\tYou need to enable JavaScript to run this app.\n\t</noscript>\n\t<script src=\"/.assets/scripts/app.bundle.js?\"></script>\n\t\n</body>\n\n</html>\n"
    },
    "/.api/graphql-?CurrentAuthState--{\"query\":\"\\nqueryCurrentAuthState{\\ncurrentUser{\\n__typename\\nid\\ndatabaseID\\nusername\\navatarURL\\nemail\\nusername\\ndisplayName\\nsiteAdmin\\ntags\\nurl\\nsettingsURL\\norganizations{\\nnodes{\\nid\\nname\\ndisplayName\\nurl\\nsettingsURL\\n}\\n}\\nsession{\\ncanSignOut\\n}\\nviewerCanAdminister\\n}\\n}\\n\",\"variables\":{}}": {
        "status": 200,
        "contentType": "application/json",
        "body": "{\"data\":{\"currentUser\":{\"__typename\":\"User\",\"id\":\"VXNlcjox\",\"databaseID\":1,\"username\":\"test\",\"avatarURL\":null,\"email\":\"test@test.com\",\"displayName\":null,\"siteAdmin\":true,\"tags\":[],\"url\":\"/users/test\",\"settingsURL\":\"/users/test/settings\",\"organizations\":{\"nodes\":[]},\"session\":{\"canSignOut\":true},\"viewerCanAdminister\":true}}}"
    },
    "/.api/graphql-?ViewerSettings--{\"query\":\"\\nqueryViewerSettings{\\nviewerSettings{\\n...SettingsCascadeFields\\n}\\n}\\n\\nfragmentSettingsCascadeFieldsonSettingsCascade{\\nsubjects{\\n__typename\\n...onOrg{\\nid\\nname\\ndisplayName\\n}\\n...onUser{\\nid\\nusername\\ndisplayName\\n}\\n...onSite{\\nid\\nsiteID\\n}\\nlatestSettings{\\nid\\ncontents\\n}\\nsettingsURL\\nviewerCanAdminister\\n}\\nfinal\\n}\\n\\n\",\"variables\":{}}": {
        "status": 200,
        "contentType": "application/json",
        "body": "{\"data\":{\"viewerSettings\":{\"subjects\":[{\"__typename\":\"DefaultSettings\",\"latestSettings\":{\"id\":0,\"contents\":\"{\\\"extensions\\\":{\\\"sourcegraph/clojure\\\":true,\\\"sourcegraph/cpp\\\":true,\\\"sourcegraph/csharp\\\":true,\\\"sourcegraph/cuda\\\":true,\\\"sourcegraph/dart\\\":true,\\\"sourcegraph/elixir\\\":true,\\\"sourcegraph/erlang\\\":true,\\\"sourcegraph/git-extras\\\":true,\\\"sourcegraph/go\\\":true,\\\"sourcegraph/graphql\\\":true,\\\"sourcegraph/groovy\\\":true,\\\"sourcegraph/haskell\\\":true,\\\"sourcegraph/java\\\":true,\\\"sourcegraph/jsonnet\\\":true,\\\"sourcegraph/kotlin\\\":true,\\\"sourcegraph/lisp\\\":true,\\\"sourcegraph/lua\\\":true,\\\"sourcegraph/ocaml\\\":true,\\\"sourcegraph/pascal\\\":true,\\\"sourcegraph/perl\\\":true,\\\"sourcegraph/php\\\":true,\\\"sourcegraph/powershell\\\":true,\\\"sourcegraph/protobuf\\\":true,\\\"sourcegraph/python\\\":true,\\\"sourcegraph/r\\\":true,\\\"sourcegraph/ruby\\\":true,\\\"sourcegraph/rust\\\":true,\\\"sourcegraph/scala\\\":true,\\\"sourcegraph/shell\\\":true,\\\"sourcegraph/swift\\\":true,\\\"sourcegraph/thrift\\\":true,\\\"sourcegraph/typescript\\\":true,\\\"sourcegraph/verilog\\\":true,\\\"sourcegraph/vhdl\\\":true}}\"},\"settingsURL\":null,\"viewerCanAdminister\":false},{\"__typename\":\"Site\",\"id\":\"U2l0ZToic2l0ZSI=\",\"siteID\":\"bc6b8f71-21e7-45ba-a867-05bb6b099040\",\"latestSettings\":{\"id\":91,\"contents\":\"{\\n  // This is set from an environment variable\\n  \\\"experimentalFeatures\\\": {\\n    \\\"smartSearchField\\\": true\\n  }\\n}\\n\"},\"settingsURL\":\"/site-admin/global-settings\",\"viewerCanAdminister\":true},{\"__typename\":\"User\",\"id\":\"VXNlcjox\",\"username\":\"test\",\"displayName\":null,\"latestSettings\":{\"id\":106,\"contents\":\"{}\"},\"settingsURL\":\"/users/test/settings\",\"viewerCanAdminister\":true}],\"final\":\"{\\\"experimentalFeatures\\\":{\\\"smartSearchField\\\":true},\\\"extensions\\\":{\\\"sourcegraph/clojure\\\":true,\\\"sourcegraph/cpp\\\":true,\\\"sourcegraph/csharp\\\":true,\\\"sourcegraph/cuda\\\":true,\\\"sourcegraph/dart\\\":true,\\\"sourcegraph/elixir\\\":true,\\\"sourcegraph/erlang\\\":true,\\\"sourcegraph/git-extras\\\":true,\\\"sourcegraph/go\\\":true,\\\"sourcegraph/graphql\\\":true,\\\"sourcegraph/groovy\\\":true,\\\"sourcegraph/haskell\\\":true,\\\"sourcegraph/java\\\":true,\\\"sourcegraph/jsonnet\\\":true,\\\"sourcegraph/kotlin\\\":true,\\\"sourcegraph/lisp\\\":true,\\\"sourcegraph/lua\\\":true,\\\"sourcegraph/ocaml\\\":true,\\\"sourcegraph/pascal\\\":true,\\\"sourcegraph/perl\\\":true,\\\"sourcegraph/php\\\":true,\\\"sourcegraph/powershell\\\":true,\\\"sourcegraph/protobuf\\\":true,\\\"sourcegraph/python\\\":true,\\\"sourcegraph/r\\\":true,\\\"sourcegraph/ruby\\\":true,\\\"sourcegraph/rust\\\":true,\\\"sourcegraph/scala\\\":true,\\\"sourcegraph/shell\\\":true,\\\"sourcegraph/swift\\\":true,\\\"sourcegraph/thrift\\\":true,\\\"sourcegraph/typescript\\\":true,\\\"sourcegraph/verilog\\\":true,\\\"sourcegraph/vhdl\\\":true}}\"}}}"
    },
    "/.api/graphql-?SiteFlags--{\"query\":\"\\nquerySiteFlags{\\nsite{\\nneedsRepositoryConfiguration\\nfreeUsersExceeded\\nalerts{\\ntype\\nmessage\\nisDismissibleWithKey\\n}\\nauthProviders{\\nnodes{\\nserviceType\\nserviceID\\nclientID\\ndisplayName\\nisBuiltin\\nauthenticationURL\\n}\\n}\\ndisableBuiltInSearches\\nsendsEmailVerificationEmails\\nupdateCheck{\\npending\\ncheckedAt\\nerrorMessage\\nupdateVersionAvailable\\n}\\nproductSubscription{\\nlicense{\\nexpiresAt\\n}\\nnoLicenseWarningUserCount\\n}\\nproductVersion\\n}\\n}\\n\",\"variables\":{}}": {
        "status": 200,
        "contentType": "application/json",
        "body": "{\"data\":{\"site\":{\"needsRepositoryConfiguration\":false,\"freeUsersExceeded\":false,\"alerts\":[],\"authProviders\":{\"nodes\":[{\"serviceType\":\"builtin\",\"serviceID\":\"\",\"clientID\":\"\",\"displayName\":\"Builtin username-password authentication\",\"isBuiltin\":true,\"authenticationURL\":null}]},\"disableBuiltInSearches\":false,\"sendsEmailVerificationEmails\":false,\"updateCheck\":{\"pending\":false,\"checkedAt\":\"2020-04-06T15:22:39+02:00\",\"errorMessage\":null,\"updateVersionAvailable\":\"3.14.1\"},\"productSubscription\":{\"license\":null,\"noLicenseWarningUserCount\":20},\"productVersion\":\"0.0.0+dev\"}}}"
    },
    "/sockjs-node/info-?t=1586179461314-": {
        "status": 200,
        "contentType": "application/json; charset=UTF-8",
        "body": "{\"websocket\":true,\"origins\":[\"*:*\"],\"cookie_needed\":false,\"entropy\":1321710437}"
    },
    "/.api/graphql-?ActivationStatus--{\"query\":\"\\nqueryActivationStatus{\\nexternalServices{\\ntotalCount\\n}\\nrepositories{\\ntotalCount\\n}\\nviewerSettings{\\nfinal\\n}\\nusers{\\ntotalCount\\n}\\ncurrentUser{\\nusageStatistics{\\nsearchQueries\\nfindReferencesActions\\ncodeIntelligenceActions\\n}\\n}\\n}\\n\",\"variables\":{}}": {
        "status": 200,
        "contentType": "application/json",
        "body": "{\"data\":{\"externalServices\":{\"totalCount\":1},\"repositories\":{\"totalCount\":2},\"viewerSettings\":{\"final\":\"{\\\"experimentalFeatures\\\":{\\\"smartSearchField\\\":true},\\\"extensions\\\":{\\\"sourcegraph/clojure\\\":true,\\\"sourcegraph/cpp\\\":true,\\\"sourcegraph/csharp\\\":true,\\\"sourcegraph/cuda\\\":true,\\\"sourcegraph/dart\\\":true,\\\"sourcegraph/elixir\\\":true,\\\"sourcegraph/erlang\\\":true,\\\"sourcegraph/git-extras\\\":true,\\\"sourcegraph/go\\\":true,\\\"sourcegraph/graphql\\\":true,\\\"sourcegraph/groovy\\\":true,\\\"sourcegraph/haskell\\\":true,\\\"sourcegraph/java\\\":true,\\\"sourcegraph/jsonnet\\\":true,\\\"sourcegraph/kotlin\\\":true,\\\"sourcegraph/lisp\\\":true,\\\"sourcegraph/lua\\\":true,\\\"sourcegraph/ocaml\\\":true,\\\"sourcegraph/pascal\\\":true,\\\"sourcegraph/perl\\\":true,\\\"sourcegraph/php\\\":true,\\\"sourcegraph/powershell\\\":true,\\\"sourcegraph/protobuf\\\":true,\\\"sourcegraph/python\\\":true,\\\"sourcegraph/r\\\":true,\\\"sourcegraph/ruby\\\":true,\\\"sourcegraph/rust\\\":true,\\\"sourcegraph/scala\\\":true,\\\"sourcegraph/shell\\\":true,\\\"sourcegraph/swift\\\":true,\\\"sourcegraph/thrift\\\":true,\\\"sourcegraph/typescript\\\":true,\\\"sourcegraph/verilog\\\":true,\\\"sourcegraph/vhdl\\\":true}}\"},\"users\":{\"totalCount\":1},\"currentUser\":{\"usageStatistics\":{\"searchQueries\":252,\"findReferencesActions\":3,\"codeIntelligenceActions\":41}}}}"
    },
    "/.api/graphql-?StatusMessages--{\"query\":\"\\nqueryStatusMessages{\\nstatusMessages{\\n__typename\\n\\n...onCloningProgress{\\nmessage\\n}\\n\\n...onSyncError{\\nmessage\\n}\\n\\n...onExternalServiceSyncError{\\nmessage\\nexternalService{\\nid\\ndisplayName\\n}\\n}\\n}\\n}\\n\",\"variables\":{}}": {
        "status": 200,
        "contentType": "application/json",
        "body": "{\"data\":{\"statusMessages\":[]}}"
    },
    "/.api/graphql-?logUserEvent--{\"query\":\"\\nmutationlogUserEvent($event:UserEvent!,$userCookieID:String!){\\nlogUserEvent(event:$event,userCookieID:$userCookieID){\\nalwaysNil\\n}\\n}\\n\",\"variables\":{\"event\":\"PAGEVIEW\",\"userCookieID\":\"db4a2421-53b4-421d-8bad-f7b3d8a33d07\"}}": {
        "status": 200,
        "contentType": "application/json",
        "body": "{\"data\":{\"logUserEvent\":null}}"
    },
    "/.api/graphql-?logUserEvent--{\"query\":\"\\nmutationlogUserEvent($event:UserEvent!,$userCookieID:String!){\\nlogUserEvent(event:$event,userCookieID:$userCookieID){\\nalwaysNil\\n}\\n}\\n\",\"variables\":{\"event\":\"SEARCHQUERY\",\"userCookieID\":\"db4a2421-53b4-421d-8bad-f7b3d8a33d07\"}}": {
        "status": 200,
        "contentType": "application/json",
        "body": "{\"data\":{\"logUserEvent\":null}}"
    },
    "/.api/graphql-?logUserEvent--{\"query\":\"\\nmutationlogUserEvent($event:UserEvent!,$userCookieID:String!){\\nlogUserEvent(event:$event,userCookieID:$userCookieID){\\nalwaysNil\\n}\\n}\\n\",\"variables\":{\"event\":\"STAGECODE\",\"userCookieID\":\"db4a2421-53b4-421d-8bad-f7b3d8a33d07\"}}": {
        "status": 200,
        "contentType": "application/json",
        "body": "{\"data\":{\"logUserEvent\":null}}"
    },
    "/.api/graphql-?Search--{\"query\":\"\\nquerySearch($query:String!,$version:SearchVersion!,$patternType:SearchPatternType!){\\nsearch(query:$query,version:$version,patternType:$patternType){\\nresults{\\n__typename\\nlimitHit\\nmatchCount\\napproximateResultCount\\nmissing{\\nname\\n}\\ncloning{\\nname\\n}\\nrepositoriesCount\\ntimedout{\\nname\\n}\\nindexUnavailable\\ndynamicFilters{\\nvalue\\nlabel\\ncount\\nlimitHit\\nkind\\n}\\nresults{\\n__typename\\n...onRepository{\\nid\\nname\\n\\n__typename\\nlabel{\\nhtml\\n}\\nurl\\nicon\\ndetail{\\nhtml\\n}\\nmatches{\\nurl\\nbody{\\ntext\\nhtml\\n}\\nhighlights{\\nline\\ncharacter\\nlength\\n}\\n}\\n\\n}\\n...onFileMatch{\\nfile{\\npath\\nurl\\ncommit{\\noid\\n}\\n}\\nrepository{\\nname\\nurl\\n}\\nrevSpec{\\n__typename\\n...onGitRef{\\ndisplayName\\nurl\\n}\\n...onGitRevSpecExpr{\\nexpr\\nobject{commit{url}}\\n}\\n...onGitObject{\\nabbreviatedOID\\ncommit{\\nurl\\n}\\n}\\n}\\nlimitHit\\nsymbols{\\nname\\ncontainerName\\nurl\\nkind\\n}\\nlineMatches{\\npreview\\nlineNumber\\noffsetAndLengths\\n}\\n}\\n...onCommitSearchResult{\\n\\n__typename\\nlabel{\\nhtml\\n}\\nurl\\nicon\\ndetail{\\nhtml\\n}\\nmatches{\\nurl\\nbody{\\ntext\\nhtml\\n}\\nhighlights{\\nline\\ncharacter\\nlength\\n}\\n}\\n\\n}\\n\\n}\\nalert{\\ntitle\\ndescription\\nproposedQueries{\\ndescription\\nquery\\n}\\n}\\nelapsedMilliseconds\\n}\\n}\\n}\\n\",\"variables\":{\"query\":\"testcase:yes\",\"version\":\"V2\",\"patternType\":\"literal\"}}": {
        "status": 200,
        "contentType": "application/json",
        "body": "{\"data\":{\"search\":{\"results\":{\"__typename\":\"SearchResults\",\"limitHit\":false,\"matchCount\":316,\"approximateResultCount\":\"316\",\"missing\":[],\"cloning\":[],\"repositoriesCount\":4,\"timedout\":[],\"indexUnavailable\":false,\"dynamicFilters\":[{\"value\":\"lang:go\",\"label\":\"lang:go\",\"count\":27,\"limitHit\":false,\"kind\":\"lang\"},{\"value\":\"repo:^github\\\\.com/gorilla/mux$\",\"label\":\"github.com/gorilla/mux\",\"count\":243,\"limitHit\":false,\"kind\":\"repo\"},{\"value\":\"-file:_test\\\\.go$\",\"label\":\"-file:_test\\\\.go$\",\"count\":27,\"limitHit\":false,\"kind\":\"file\"},{\"value\":\"repo:^github\\\\.com/sourcegraph/jsonrpc2$\",\"label\":\"github.com/sourcegraph/jsonrpc2\",\"count\":73,\"limitHit\":false,\"kind\":\"repo\"},{\"value\":\"lang:yaml\",\"label\":\"lang:yaml\",\"count\":1,\"limitHit\":false,\"kind\":\"lang\"},{\"value\":\"lang:markdown\",\"label\":\"lang:markdown\",\"count\":22,\"limitHit\":false,\"kind\":\"lang\"}],\"results\":[{\"__typename\":\"FileMatch\",\"file\":{\"path\":\".circleci/config.yml\",\"url\":\"/github.com/gorilla/mux/-/blob/.circleci/config.yml\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"  # Base test configuration for Go library tests Each distinct version should\",\"lineNumber\":3,\"offsetAndLengths\":[[9,4]]},{\"preview\":\"  # Base test configuration for Go library tests Each distinct version should\",\"lineNumber\":3,\"offsetAndLengths\":[[43,4]]},{\"preview\":\"  \\\"test\\\": \\u0026test\",\"lineNumber\":5,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"  \\\"test\\\": \\u0026test\",\"lineNumber\":5,\"offsetAndLengths\":[[11,4]]},{\"preview\":\"      - image: circleci/golang:latest\",\"lineNumber\":7,\"offsetAndLengths\":[[33,4]]},{\"preview\":\"      # run \\\"go test\\\" on the package.\",\"lineNumber\":11,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"      # Only run gofmt, vet \\u0026 lint against the latest Go version\",\"lineNumber\":19,\"offsetAndLengths\":[[49,4]]},{\"preview\":\"      - run: go test -v -race ./...\",\"lineNumber\":39,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"  \\\"latest\\\":\",\"lineNumber\":41,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"    \\u003c\\u003c: *test\",\"lineNumber\":42,\"offsetAndLengths\":[[9,4]]},{\"preview\":\"    \\u003c\\u003c: *test\",\"lineNumber\":47,\"offsetAndLengths\":[[9,4]]},{\"preview\":\"    \\u003c\\u003c: *test\",\"lineNumber\":52,\"offsetAndLengths\":[[9,4]]},{\"preview\":\"    \\u003c\\u003c: *test\",\"lineNumber\":57,\"offsetAndLengths\":[[9,4]]},{\"preview\":\"    \\u003c\\u003c: *test\",\"lineNumber\":62,\"offsetAndLengths\":[[9,4]]},{\"preview\":\"    \\u003c\\u003c: *test\",\"lineNumber\":67,\"offsetAndLengths\":[[9,4]]},{\"preview\":\"    \\u003c\\u003c: *test\",\"lineNumber\":72,\"offsetAndLengths\":[[9,4]]},{\"preview\":\"      - \\\"latest\\\"\",\"lineNumber\":80,\"offsetAndLengths\":[[11,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"README.md\",\"url\":\"/github.com/gorilla/mux/-/blob/README.md\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"* Routes can be used as subrouters: nested routes are only tested if the parent route matches. This is useful to define groups of routes that share common conditions like a host, a path prefix or other repeated attributes. As a bonus, this optimizes request matching.\",\"lineNumber\":19,\"offsetAndLengths\":[[59,4]]},{\"preview\":\"* [Testing Handlers](#testing-handlers)\",\"lineNumber\":33,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"With a [correctly configured](https://golang.org/doc/install#testing) Go toolchain:\",\"lineNumber\":40,\"offsetAndLengths\":[[61,4]]},{\"preview\":\"Routes are tested in the order they were added to the router. If two routes match, the first one wins:\",\"lineNumber\":142,\"offsetAndLengths\":[[11,4]]},{\"preview\":\"The three URL paths we registered above will only be tested if the domain is `www.example.com`, because the subrouter is tested first. This is not only convenient, but also optimizes request matching. You can create subrouters combining any attribute matchers accepted by a route.\",\"lineNumber\":167,\"offsetAndLengths\":[[53,4]]},{\"preview\":\"The three URL paths we registered above will only be tested if the domain is `www.example.com`, because the subrouter is tested first. This is not only convenient, but also optimizes request matching. You can create subrouters combining any attribute matchers accepted by a route.\",\"lineNumber\":167,\"offsetAndLengths\":[[121,4]]},{\"preview\":\"Testing handlers in a Go web application is straightforward, and _mux_ doesn't complicate this any further. Given two files: `endpoints.go` and `endpoints_test.go`, here's how we'd test an application using _mux_.\",\"lineNumber\":651,\"offsetAndLengths\":[[155,4]]},{\"preview\":\"Testing handlers in a Go web application is straightforward, and _mux_ doesn't complicate this any further. Given two files: `endpoints.go` and `endpoints_test.go`, here's how we'd test an application using _mux_.\",\"lineNumber\":651,\"offsetAndLengths\":[[181,4]]},{\"preview\":\"Our test code:\",\"lineNumber\":677,\"offsetAndLengths\":[[4,4]]},{\"preview\":\"// endpoints_test.go\",\"lineNumber\":680,\"offsetAndLengths\":[[13,4]]},{\"preview\":\"    \\\"net/http/httptest\\\"\",\"lineNumber\":685,\"offsetAndLengths\":[[18,4]]},{\"preview\":\"    \\\"testing\\\"\",\"lineNumber\":686,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestHealthCheckHandler(t *testing.T) {\",\"lineNumber\":689,\"offsetAndLengths\":[[31,4]]},{\"preview\":\"    rr := httptest.NewRecorder()\",\"lineNumber\":698,\"offsetAndLengths\":[[14,4]]},{\"preview\":\"[table-driven tests](https://dave.cheney.net/2013/06/09/writing-table-driven-tests-in-go) to test multiple\",\"lineNumber\":721,\"offsetAndLengths\":[[14,4]]},{\"preview\":\"[table-driven tests](https://dave.cheney.net/2013/06/09/writing-table-driven-tests-in-go) to test multiple\",\"lineNumber\":721,\"offsetAndLengths\":[[77,4]]},{\"preview\":\"[table-driven tests](https://dave.cheney.net/2013/06/09/writing-table-driven-tests-in-go) to test multiple\",\"lineNumber\":721,\"offsetAndLengths\":[[93,4]]},{\"preview\":\"Our test file, with a table-driven test of `routeVariables`:\",\"lineNumber\":735,\"offsetAndLengths\":[[4,4]]},{\"preview\":\"Our test file, with a table-driven test of `routeVariables`:\",\"lineNumber\":735,\"offsetAndLengths\":[[35,4]]},{\"preview\":\"// endpoints_test.go\",\"lineNumber\":738,\"offsetAndLengths\":[[13,4]]},{\"preview\":\"func TestMetricsHandler(t *testing.T) {\",\"lineNumber\":739,\"offsetAndLengths\":[[27,4]]},{\"preview\":\"        rr := httptest.NewRecorder()\",\"lineNumber\":758,\"offsetAndLengths\":[[18,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"bench_test.go\",\"url\":\"/github.com/gorilla/mux/-/blob/bench_test.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"\\t\\\"net/http/httptest\\\"\",\"lineNumber\":8,\"offsetAndLengths\":[[15,4]]},{\"preview\":\"\\t\\\"testing\\\"\",\"lineNumber\":9,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"func BenchmarkMux(b *testing.B) {\",\"lineNumber\":12,\"offsetAndLengths\":[[21,4]]},{\"preview\":\"func BenchmarkMuxAlternativeInRegexp(b *testing.B) {\",\"lineNumber\":23,\"offsetAndLengths\":[[40,4]]},{\"preview\":\"func BenchmarkManyPathVariables(b *testing.B) {\",\"lineNumber\":36,\"offsetAndLengths\":[[35,4]]},{\"preview\":\"\\trecorder := httptest.NewRecorder()\",\"lineNumber\":43,\"offsetAndLengths\":[[17,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"doc.go\",\"url\":\"/github.com/gorilla/mux/-/blob/doc.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"\\t* Routes can be used as subrouters: nested routes are only tested if the\",\"lineNumber\":18,\"offsetAndLengths\":[[60,4]]},{\"preview\":\"The three URL paths we registered above will only be tested if the domain is\",\"lineNumber\":126,\"offsetAndLengths\":[[53,4]]},{\"preview\":\"\\\"www.example.com\\\", because the subrouter is tested first. This is not\",\"lineNumber\":127,\"offsetAndLengths\":[[44,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"example_authentication_middleware_test.go\",\"url\":\"/github.com/gorilla/mux/-/blob/example_authentication_middleware_test.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"package mux_test\",\"lineNumber\":0,\"offsetAndLengths\":[[12,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"example_cors_method_middleware_test.go\",\"url\":\"/github.com/gorilla/mux/-/blob/example_cors_method_middleware_test.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"package mux_test\",\"lineNumber\":0,\"offsetAndLengths\":[[12,4]]},{\"preview\":\"\\t\\\"net/http/httptest\\\"\",\"lineNumber\":5,\"offsetAndLengths\":[[15,4]]},{\"preview\":\"\\trw := httptest.NewRecorder()\",\"lineNumber\":23,\"offsetAndLengths\":[[11,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"example_route_test.go\",\"url\":\"/github.com/gorilla/mux/-/blob/example_route_test.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"package mux_test\",\"lineNumber\":0,\"offsetAndLengths\":[[12,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"middleware_test.go\",\"url\":\"/github.com/gorilla/mux/-/blob/middleware_test.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"\\t\\\"testing\\\"\",\"lineNumber\":5,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"type testMiddleware struct {\",\"lineNumber\":8,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func (tm *testMiddleware) Middleware(h http.Handler) http.Handler {\",\"lineNumber\":12,\"offsetAndLengths\":[[10,4]]},{\"preview\":\"func TestMiddlewareAdd(t *testing.T) {\",\"lineNumber\":21,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"\\tmw := \\u0026testMiddleware{}\",\"lineNumber\":25,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"func TestMiddleware(t *testing.T) {\",\"lineNumber\":46,\"offsetAndLengths\":[[23,4]]},{\"preview\":\"\\tmw := \\u0026testMiddleware{}\",\"lineNumber\":50,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tt.Run(\\\"regular middleware call\\\", func(t *testing.T) {\",\"lineNumber\":56,\"offsetAndLengths\":[[42,4]]},{\"preview\":\"\\tt.Run(\\\"not called for 404\\\", func(t *testing.T) {\",\"lineNumber\":63,\"offsetAndLengths\":[[37,4]]},{\"preview\":\"\\tt.Run(\\\"not called for method mismatch\\\", func(t *testing.T) {\",\"lineNumber\":71,\"offsetAndLengths\":[[49,4]]},{\"preview\":\"\\tt.Run(\\\"regular call using function middleware\\\", func(t *testing.T) {\",\"lineNumber\":79,\"offsetAndLengths\":[[57,4]]},{\"preview\":\"func TestMiddlewareSubrouter(t *testing.T) {\",\"lineNumber\":89,\"offsetAndLengths\":[[32,4]]},{\"preview\":\"\\tmw := \\u0026testMiddleware{}\",\"lineNumber\":96,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tt.Run(\\\"not called for route outside subrouter\\\", func(t *testing.T) {\",\"lineNumber\":102,\"offsetAndLengths\":[[57,4]]},{\"preview\":\"\\tt.Run(\\\"not called for subrouter root 404\\\", func(t *testing.T) {\",\"lineNumber\":109,\"offsetAndLengths\":[[52,4]]},{\"preview\":\"\\tt.Run(\\\"called once for route inside subrouter\\\", func(t *testing.T) {\",\"lineNumber\":117,\"offsetAndLengths\":[[57,4]]},{\"preview\":\"\\tt.Run(\\\"not called for 404 inside subrouter\\\", func(t *testing.T) {\",\"lineNumber\":125,\"offsetAndLengths\":[[54,4]]},{\"preview\":\"\\tt.Run(\\\"middleware added to router\\\", func(t *testing.T) {\",\"lineNumber\":133,\"offsetAndLengths\":[[45,4]]},{\"preview\":\"\\t\\tt.Run(\\\"called once for route outside subrouter\\\", func(t *testing.T) {\",\"lineNumber\":136,\"offsetAndLengths\":[[59,4]]},{\"preview\":\"\\t\\tt.Run(\\\"called twice for route inside subrouter\\\", func(t *testing.T) {\",\"lineNumber\":144,\"offsetAndLengths\":[[59,4]]},{\"preview\":\"func TestMiddlewareExecution(t *testing.T) {\",\"lineNumber\":154,\"offsetAndLengths\":[[32,4]]},{\"preview\":\"\\tt.Run(\\\"responds normally without middleware\\\", func(t *testing.T) {\",\"lineNumber\":163,\"offsetAndLengths\":[[55,4]]},{\"preview\":\"\\tt.Run(\\\"responds with handler and middleware response\\\", func(t *testing.T) {\",\"lineNumber\":174,\"offsetAndLengths\":[[64,4]]},{\"preview\":\"func TestMiddlewareNotFound(t *testing.T) {\",\"lineNumber\":192,\"offsetAndLengths\":[[31,4]]},{\"preview\":\"\\tt.Run(\\\"not called\\\", func(t *testing.T) {\",\"lineNumber\":208,\"offsetAndLengths\":[[29,4]]},{\"preview\":\"\\tt.Run(\\\"not called with custom not found handler\\\", func(t *testing.T) {\",\"lineNumber\":218,\"offsetAndLengths\":[[59,4]]},{\"preview\":\"func TestMiddlewareMethodMismatch(t *testing.T) {\",\"lineNumber\":233,\"offsetAndLengths\":[[37,4]]},{\"preview\":\"\\tt.Run(\\\"not called\\\", func(t *testing.T) {\",\"lineNumber\":249,\"offsetAndLengths\":[[29,4]]},{\"preview\":\"\\tt.Run(\\\"not called with custom method not allowed handler\\\", func(t *testing.T) {\",\"lineNumber\":259,\"offsetAndLengths\":[[68,4]]},{\"preview\":\"func TestMiddlewareNotFoundSubrouter(t *testing.T) {\",\"lineNumber\":274,\"offsetAndLengths\":[[40,4]]},{\"preview\":\"\\tt.Run(\\\"not called\\\", func(t *testing.T) {\",\"lineNumber\":295,\"offsetAndLengths\":[[29,4]]},{\"preview\":\"\\tt.Run(\\\"not called with custom not found handler\\\", func(t *testing.T) {\",\"lineNumber\":305,\"offsetAndLengths\":[[59,4]]},{\"preview\":\"func TestMiddlewareMethodMismatchSubrouter(t *testing.T) {\",\"lineNumber\":320,\"offsetAndLengths\":[[46,4]]},{\"preview\":\"\\tt.Run(\\\"not called\\\", func(t *testing.T) {\",\"lineNumber\":341,\"offsetAndLengths\":[[29,4]]},{\"preview\":\"\\tt.Run(\\\"not called with custom method not allowed handler\\\", func(t *testing.T) {\",\"lineNumber\":351,\"offsetAndLengths\":[[68,4]]},{\"preview\":\"func TestCORSMethodMiddleware(t *testing.T) {\",\"lineNumber\":366,\"offsetAndLengths\":[[33,4]]},{\"preview\":\"\\ttestCases := []struct {\",\"lineNumber\":367,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor _, tt := range testCases {\",\"lineNumber\":453,\"offsetAndLengths\":[[20,4]]},{\"preview\":\"\\t\\tt.Run(tt.name, func(t *testing.T) {\",\"lineNumber\":454,\"offsetAndLengths\":[[25,4]]},{\"preview\":\"func TestCORSMethodMiddlewareSubrouter(t *testing.T) {\",\"lineNumber\":480,\"offsetAndLengths\":[[42,4]]},{\"preview\":\"\\tsubrouter := router.PathPrefix(\\\"/test\\\").Subrouter()\",\"lineNumber\":483,\"offsetAndLengths\":[[34,4]]},{\"preview\":\"\\treq := newRequest(\\\"GET\\\", \\\"/test/hello/asdf\\\")\",\"lineNumber\":490,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"func TestMiddlewareOnMultiSubrouter(t *testing.T) {\",\"lineNumber\":500,\"offsetAndLengths\":[[39,4]]},{\"preview\":\"\\tt.Run(\\\"/first uses first middleware\\\", func(t *testing.T) {\",\"lineNumber\":535,\"offsetAndLengths\":[[47,4]]},{\"preview\":\"\\tt.Run(\\\"/second uses second middleware\\\", func(t *testing.T) {\",\"lineNumber\":545,\"offsetAndLengths\":[[49,4]]},{\"preview\":\"\\tt.Run(\\\"uses not found handler\\\", func(t *testing.T) {\",\"lineNumber\":555,\"offsetAndLengths\":[[41,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"mux_httpserver_test.go\",\"url\":\"/github.com/gorilla/mux/-/blob/mux_httpserver_test.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"\\t\\\"net/http/httptest\\\"\",\"lineNumber\":8,\"offsetAndLengths\":[[15,4]]},{\"preview\":\"\\t\\\"testing\\\"\",\"lineNumber\":9,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"func TestSchemeMatchers(t *testing.T) {\",\"lineNumber\":12,\"offsetAndLengths\":[[27,4]]},{\"preview\":\"\\tassertResponseBody := func(t *testing.T, s *httptest.Server, expectedBody string) {\",\"lineNumber\":21,\"offsetAndLengths\":[[31,4]]},{\"preview\":\"\\tassertResponseBody := func(t *testing.T, s *httptest.Server, expectedBody string) {\",\"lineNumber\":21,\"offsetAndLengths\":[[49,4]]},{\"preview\":\"\\tt.Run(\\\"httpServer\\\", func(t *testing.T) {\",\"lineNumber\":38,\"offsetAndLengths\":[[29,4]]},{\"preview\":\"\\t\\ts := httptest.NewServer(router)\",\"lineNumber\":39,\"offsetAndLengths\":[[11,4]]},{\"preview\":\"\\tt.Run(\\\"httpsServer\\\", func(t *testing.T) {\",\"lineNumber\":43,\"offsetAndLengths\":[[30,4]]},{\"preview\":\"\\t\\ts := httptest.NewTLSServer(router)\",\"lineNumber\":44,\"offsetAndLengths\":[[11,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"mux_test.go\",\"url\":\"/github.com/gorilla/mux/-/blob/mux_test.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":true,\"symbols\":[],\"lineMatches\":[{\"preview\":\"\\t\\\"net/http/httptest\\\"\",\"lineNumber\":14,\"offsetAndLengths\":[[15,4]]},{\"preview\":\"\\t\\\"testing\\\"\",\"lineNumber\":18,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"\\ttitle           string            // title of the test\",\"lineNumber\":35,\"offsetAndLengths\":[[51,4]]},{\"preview\":\"\\troute           *Route            // the route being tested\",\"lineNumber\":36,\"offsetAndLengths\":[[54,4]]},{\"preview\":\"\\trequest         *http.Request     // a request to test the route\",\"lineNumber\":37,\"offsetAndLengths\":[[51,4]]},{\"preview\":\"func TestHost(t *testing.T) {\",\"lineNumber\":53,\"offsetAndLengths\":[[17,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":55,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":219,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":219,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":220,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":220,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":221,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":221,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":222,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":222,\"offsetAndLengths\":[[19,4]]},{\"preview\":\"func TestPath(t *testing.T) {\",\"lineNumber\":227,\"offsetAndLengths\":[[17,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":228,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":453,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":453,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":454,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":454,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":455,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":455,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":456,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":456,\"offsetAndLengths\":[[19,4]]},{\"preview\":\"\\t\\t\\ttestUseEscapedRoute(t, test)\",\"lineNumber\":457,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestUseEscapedRoute(t, test)\",\"lineNumber\":457,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"\\t\\t\\ttestRegexp(t, test)\",\"lineNumber\":458,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestRegexp(t, test)\",\"lineNumber\":458,\"offsetAndLengths\":[[17,4]]},{\"preview\":\"func TestPathPrefix(t *testing.T) {\",\"lineNumber\":463,\"offsetAndLengths\":[[23,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":464,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":534,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":534,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":535,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":535,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":536,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":536,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":537,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":537,\"offsetAndLengths\":[[19,4]]},{\"preview\":\"\\t\\t\\ttestUseEscapedRoute(t, test)\",\"lineNumber\":538,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestUseEscapedRoute(t, test)\",\"lineNumber\":538,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"func TestSchemeHostPath(t *testing.T) {\",\"lineNumber\":543,\"offsetAndLengths\":[[27,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":544,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":643,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":643,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":644,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":644,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":645,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":645,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":646,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":646,\"offsetAndLengths\":[[19,4]]},{\"preview\":\"\\t\\t\\ttestUseEscapedRoute(t, test)\",\"lineNumber\":647,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestUseEscapedRoute(t, test)\",\"lineNumber\":647,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"func TestHeaders(t *testing.T) {\",\"lineNumber\":652,\"offsetAndLengths\":[[20,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":665,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":704,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":704,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":705,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":705,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":706,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":706,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":707,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":707,\"offsetAndLengths\":[[19,4]]},{\"preview\":\"func TestMethods(t *testing.T) {\",\"lineNumber\":712,\"offsetAndLengths\":[[20,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":713,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":756,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":756,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":757,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":757,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":758,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":758,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":759,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":759,\"offsetAndLengths\":[[19,4]]},{\"preview\":\"\\t\\t\\ttestMethods(t, test)\",\"lineNumber\":760,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestMethods(t, test)\",\"lineNumber\":760,\"offsetAndLengths\":[[18,4]]},{\"preview\":\"func TestQueries(t *testing.T) {\",\"lineNumber\":765,\"offsetAndLengths\":[[20,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":766,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":1065,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":1065,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":1066,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":1066,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":1067,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":1067,\"offsetAndLengths\":[[19,4]]},{\"preview\":\"\\t\\t\\ttestQueriesTemplates(t, test)\",\"lineNumber\":1068,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestQueriesTemplates(t, test)\",\"lineNumber\":1068,\"offsetAndLengths\":[[27,4]]},{\"preview\":\"\\t\\t\\ttestUseEscapedRoute(t, test)\",\"lineNumber\":1069,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestUseEscapedRoute(t, test)\",\"lineNumber\":1069,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"\\t\\t\\ttestQueriesRegexp(t, test)\",\"lineNumber\":1070,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestQueriesRegexp(t, test)\",\"lineNumber\":1070,\"offsetAndLengths\":[[24,4]]},{\"preview\":\"func TestSchemes(t *testing.T) {\",\"lineNumber\":1075,\"offsetAndLengths\":[[20,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":1076,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":1119,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":1119,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":1120,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":1120,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":1121,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":1121,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":1122,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":1122,\"offsetAndLengths\":[[19,4]]},{\"preview\":\"func TestMatcherFunc(t *testing.T) {\",\"lineNumber\":1127,\"offsetAndLengths\":[[24,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"old_test.go\",\"url\":\"/github.com/gorilla/mux/-/blob/old_test.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"// Old tests ported to Go1. This is a mess. Want to drop it one day.\",\"lineNumber\":0,\"offsetAndLengths\":[[7,4]]},{\"preview\":\"\\t\\\"testing\\\"\",\"lineNumber\":11,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"// records its mutations for later inspection in tests.\",\"lineNumber\":22,\"offsetAndLengths\":[[49,4]]},{\"preview\":\"func TestRouteMatchers(t *testing.T) {\",\"lineNumber\":66,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"func TestHeaderMatcher(t *testing.T) {\",\"lineNumber\":394,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"func TestHostMatcher(t *testing.T) {\",\"lineNumber\":412,\"offsetAndLengths\":[[24,4]]},{\"preview\":\"func TestMethodMatcher(t *testing.T) {\",\"lineNumber\":442,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"func TestPathMatcher(t *testing.T) {\",\"lineNumber\":457,\"offsetAndLengths\":[[24,4]]},{\"preview\":\"func TestSchemeMatcher(t *testing.T) {\",\"lineNumber\":487,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"func TestUrlBuilding(t *testing.T) {\",\"lineNumber\":502,\"offsetAndLengths\":[[24,4]]},{\"preview\":\"func TestMatchedRouteName(t *testing.T) {\",\"lineNumber\":525,\"offsetAndLengths\":[[29,4]]},{\"preview\":\"func TestSubRouting(t *testing.T) {\",\"lineNumber\":545,\"offsetAndLengths\":[[23,4]]},{\"preview\":\"func TestVariableNames(t *testing.T) {\",\"lineNumber\":568,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"func TestRedirectSlash(t *testing.T) {\",\"lineNumber\":575,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"func TestNewRegexp(t *testing.T) {\",\"lineNumber\":632,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\ttests := map[string]map[string][]string{\",\"lineNumber\":636,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor pattern, paths := range tests {\",\"lineNumber\":675,\"offsetAndLengths\":[[29,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"regexp_test.go\",\"url\":\"/github.com/gorilla/mux/-/blob/regexp_test.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"\\t\\\"testing\\\"\",\"lineNumber\":6,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"func Test_findFirstQueryKey(t *testing.T) {\",\"lineNumber\":9,\"offsetAndLengths\":[[31,4]]},{\"preview\":\"\\ttests := []string{\",\"lineNumber\":10,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor _, query := range tests {\",\"lineNumber\":22,\"offsetAndLengths\":[[23,4]]},{\"preview\":\"\\t\\tt.Run(query, func(t *testing.T) {\",\"lineNumber\":23,\"offsetAndLengths\":[[23,4]]},{\"preview\":\"\\t\\t\\t\\tt.Run(key, func(t *testing.T) {\",\"lineNumber\":27,\"offsetAndLengths\":[[23,4]]},{\"preview\":\"func Benchmark_findQueryKey(b *testing.B) {\",\"lineNumber\":41,\"offsetAndLengths\":[[31,4]]},{\"preview\":\"\\ttests := []string{\",\"lineNumber\":42,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor i, query := range tests {\",\"lineNumber\":49,\"offsetAndLengths\":[[23,4]]},{\"preview\":\"\\t\\tb.Run(strconv.Itoa(i), func(b *testing.B) {\",\"lineNumber\":50,\"offsetAndLengths\":[[33,4]]},{\"preview\":\"func Benchmark_findQueryKeyGoLib(b *testing.B) {\",\"lineNumber\":64,\"offsetAndLengths\":[[36,4]]},{\"preview\":\"\\ttests := []string{\",\"lineNumber\":65,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor i, query := range tests {\",\"lineNumber\":72,\"offsetAndLengths\":[[23,4]]},{\"preview\":\"\\t\\tb.Run(strconv.Itoa(i), func(b *testing.B) {\",\"lineNumber\":73,\"offsetAndLengths\":[[33,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"route.go\",\"url\":\"/github.com/gorilla/mux/-/blob/route.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"// It will test the inner routes only if the parent route matched. For example:\",\"lineNumber\":473,\"offsetAndLengths\":[[11,4]]},{\"preview\":\"// Here, the routes registered in the subrouter won't be tested if the host\",\"lineNumber\":481,\"offsetAndLengths\":[[57,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"test_helpers.go\",\"url\":\"/github.com/gorilla/mux/-/blob/test_helpers.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"// mux.Vars for testing route behaviour. Arguments are not modified, a shallow\",\"lineNumber\":9,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"// This API should only be used for testing purposes; it provides a way to\",\"lineNumber\":12,\"offsetAndLengths\":[[36,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\".github/workflows/lsif.yml\",\"url\":\"/github.com/sourcegraph/jsonrpc2/-/blob/.github/workflows/lsif.yml\",\"commit\":{\"oid\":\"96c4efab7ee28f3d1cf1d248a0139cea37368b18\"}},\"repository\":{\"name\":\"github.com/sourcegraph/jsonrpc2\",\"url\":\"/github.com/sourcegraph/jsonrpc2\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"    runs-on: ubuntu-latest\",\"lineNumber\":5,\"offsetAndLengths\":[[22,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\".travis.yml\",\"url\":\"/github.com/sourcegraph/jsonrpc2/-/blob/.travis.yml\",\"commit\":{\"oid\":\"96c4efab7ee28f3d1cf1d248a0139cea37368b18\"}},\"repository\":{\"name\":\"github.com/sourcegraph/jsonrpc2\",\"url\":\"/github.com/sourcegraph/jsonrpc2\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\" - go test -race -v ./...\",\"lineNumber\":5,\"offsetAndLengths\":[[6,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"codec_test.go\",\"url\":\"/github.com/sourcegraph/jsonrpc2/-/blob/codec_test.go\",\"commit\":{\"oid\":\"96c4efab7ee28f3d1cf1d248a0139cea37368b18\"}},\"repository\":{\"name\":\"github.com/sourcegraph/jsonrpc2\",\"url\":\"/github.com/sourcegraph/jsonrpc2\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"\\t\\\"testing\\\"\",\"lineNumber\":6,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"func TestVarintObjectCodec(t *testing.T) {\",\"lineNumber\":9,\"offsetAndLengths\":[[30,4]]},{\"preview\":\"func TestVSCodeObjectCodec_ReadObject(t *testing.T) {\",\"lineNumber\":24,\"offsetAndLengths\":[[41,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"jsonrpc2_test.go\",\"url\":\"/github.com/sourcegraph/jsonrpc2/-/blob/jsonrpc2_test.go\",\"commit\":{\"oid\":\"96c4efab7ee28f3d1cf1d248a0139cea37368b18\"}},\"repository\":{\"name\":\"github.com/sourcegraph/jsonrpc2\",\"url\":\"/github.com/sourcegraph/jsonrpc2\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"package jsonrpc2_test\",\"lineNumber\":0,\"offsetAndLengths\":[[17,4]]},{\"preview\":\"\\t\\\"net/http/httptest\\\"\",\"lineNumber\":10,\"offsetAndLengths\":[[15,4]]},{\"preview\":\"\\t\\\"testing\\\"\",\"lineNumber\":13,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"func TestRequest_MarshalJSON_jsonrpc(t *testing.T) {\",\"lineNumber\":21,\"offsetAndLengths\":[[40,4]]},{\"preview\":\"func TestResponse_MarshalJSON_jsonrpc(t *testing.T) {\",\"lineNumber\":31,\"offsetAndLengths\":[[41,4]]},{\"preview\":\"func TestResponseMarshalJSON_Notif(t *testing.T) {\",\"lineNumber\":42,\"offsetAndLengths\":[[38,4]]},{\"preview\":\"\\ttests := map[*jsonrpc2.Request]bool{\",\"lineNumber\":43,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor r, wantIDKey := range tests {\",\"lineNumber\":50,\"offsetAndLengths\":[[27,4]]},{\"preview\":\"func TestResponseUnmarshalJSON_Notif(t *testing.T) {\",\"lineNumber\":62,\"offsetAndLengths\":[[40,4]]},{\"preview\":\"\\ttests := map[string]bool{\",\"lineNumber\":63,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor s, want := range tests {\",\"lineNumber\":70,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"// testHandlerA is the \\\"server\\\" handler.\",\"lineNumber\":81,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"type testHandlerA struct{ t *testing.T }\",\"lineNumber\":82,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"type testHandlerA struct{ t *testing.T }\",\"lineNumber\":82,\"offsetAndLengths\":[[29,4]]},{\"preview\":\"func (h *testHandlerA) Handle(ctx context.Context, conn *jsonrpc2.Conn, req *jsonrpc2.Request) {\",\"lineNumber\":84,\"offsetAndLengths\":[[9,4]]},{\"preview\":\"// testHandlerB is the \\\"client\\\" handler.\",\"lineNumber\":97,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"type testHandlerB struct {\",\"lineNumber\":98,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"\\tt   *testing.T\",\"lineNumber\":99,\"offsetAndLengths\":[[6,4]]},{\"preview\":\"func (h *testHandlerB) Handle(ctx context.Context, conn *jsonrpc2.Conn, req *jsonrpc2.Request) {\",\"lineNumber\":104,\"offsetAndLengths\":[[9,4]]},{\"preview\":\"\\th.t.Errorf(\\\"testHandlerB got unexpected request %+v\\\", req)\",\"lineNumber\":111,\"offsetAndLengths\":[[13,4]]},{\"preview\":\"func TestClientServer(t *testing.T) {\",\"lineNumber\":114,\"offsetAndLengths\":[[25,4]]},{\"preview\":\"\\tt.Run(\\\"tcp\\\", func(t *testing.T) {\",\"lineNumber\":115,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tha := testHandlerA{t: t}\",\"lineNumber\":134,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\t\\ttestClientServer(ctx, t, jsonrpc2.NewBufferedStream(conn, jsonrpc2.VarintObjectCodec{}))\",\"lineNumber\":148,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"\\t\\t\\u003c-done // ensure Serve's error return (if any) is caught by this test\",\"lineNumber\":151,\"offsetAndLengths\":[[67,4]]},{\"preview\":\"\\tt.Run(\\\"websocket\\\", func(t *testing.T) {\",\"lineNumber\":153,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"\\t\\tha := testHandlerA{t: t}\",\"lineNumber\":157,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\t\\ts := httptest.NewServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\",\"lineNumber\":159,\"offsetAndLengths\":[[11,4]]},{\"preview\":\"\\t\\ttestClientServer(ctx, t, websocketjsonrpc2.NewObjectStream(c))\",\"lineNumber\":177,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"\\t\\t\\u003c-done // keep the test running until the WebSocket disconnects (to avoid missing errors)\",\"lineNumber\":179,\"offsetAndLengths\":[[21,4]]},{\"preview\":\"func testClientServer(ctx context.Context, t *testing.T, stream jsonrpc2.ObjectStream) {\",\"lineNumber\":183,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func testClientServer(ctx context.Context, t *testing.T, stream jsonrpc2.ObjectStream) {\",\"lineNumber\":183,\"offsetAndLengths\":[[46,4]]},{\"preview\":\"\\thb := testHandlerB{t: t}\",\"lineNumber\":184,\"offsetAndLengths\":[[7,4]]},{\"preview\":\"\\t\\tt.Errorf(\\\"testHandlerB got %d notifications, want %d\\\", len(hb.got), n)\",\"lineNumber\":208,\"offsetAndLengths\":[[12,4]]},{\"preview\":\"func TestPickID(t *testing.T) {\",\"lineNumber\":245,\"offsetAndLengths\":[[19,4]]},{\"preview\":\"\\t\\t// This is the actual test, every 3rd request we specify the\",\"lineNumber\":268,\"offsetAndLengths\":[[24,4]]},{\"preview\":\"func TestHandlerBlocking(t *testing.T) {\",\"lineNumber\":289,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"func TestConn_DisconnectNotify_EOF(t *testing.T) {\",\"lineNumber\":355,\"offsetAndLengths\":[[38,4]]},{\"preview\":\"func TestConn_DisconnectNotify_Close(t *testing.T) {\",\"lineNumber\":364,\"offsetAndLengths\":[[40,4]]},{\"preview\":\"func TestConn_DisconnectNotify_Close_async(t *testing.T) {\",\"lineNumber\":376,\"offsetAndLengths\":[[46,4]]},{\"preview\":\"func TestConn_Close_waitingForResponse(t *testing.T) {\",\"lineNumber\":393,\"offsetAndLengths\":[[42,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"object_test.go\",\"url\":\"/github.com/sourcegraph/jsonrpc2/-/blob/object_test.go\",\"commit\":{\"oid\":\"96c4efab7ee28f3d1cf1d248a0139cea37368b18\"}},\"repository\":{\"name\":\"github.com/sourcegraph/jsonrpc2\",\"url\":\"/github.com/sourcegraph/jsonrpc2\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"\\t\\\"testing\\\"\",\"lineNumber\":6,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"func TestAnyMessage(t *testing.T) {\",\"lineNumber\":9,\"offsetAndLengths\":[[23,4]]},{\"preview\":\"\\ttests := map[string]struct {\",\"lineNumber\":10,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor s, want := range tests {\",\"lineNumber\":21,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"func TestRequest_MarshalUnmarshalJSON(t *testing.T) {\",\"lineNumber\":38,\"offsetAndLengths\":[[41,4]]},{\"preview\":\"\\ttests := []struct {\",\"lineNumber\":41,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":58,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":58,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tif err := json.Unmarshal(test.data, \\u0026got); err != nil {\",\"lineNumber\":60,\"offsetAndLengths\":[[27,4]]},{\"preview\":\"\\t\\tif !reflect.DeepEqual(got, test.want) {\",\"lineNumber\":64,\"offsetAndLengths\":[[29,4]]},{\"preview\":\"\\t\\t\\tt.Errorf(\\\"%q: got %+v, want %+v\\\", test.data, got, test.want)\",\"lineNumber\":65,\"offsetAndLengths\":[[37,4]]},{\"preview\":\"\\t\\t\\tt.Errorf(\\\"%q: got %+v, want %+v\\\", test.data, got, test.want)\",\"lineNumber\":65,\"offsetAndLengths\":[[53,4]]},{\"preview\":\"\\t\\tif !bytes.Equal(data, test.data) {\",\"lineNumber\":73,\"offsetAndLengths\":[[24,4]]},{\"preview\":\"\\t\\t\\tt.Errorf(\\\"got JSON %q, want %q\\\", data, test.data)\",\"lineNumber\":74,\"offsetAndLengths\":[[42,4]]},{\"preview\":\"func TestResponse_MarshalUnmarshalJSON(t *testing.T) {\",\"lineNumber\":79,\"offsetAndLengths\":[[42,4]]},{\"preview\":\"\\ttests := []struct {\",\"lineNumber\":82,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":101,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":101,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tif err := json.Unmarshal(test.data, \\u0026got); err != nil {\",\"lineNumber\":103,\"offsetAndLengths\":[[27,4]]},{\"preview\":\"\\t\\tif !reflect.DeepEqual(got, test.want) {\",\"lineNumber\":107,\"offsetAndLengths\":[[29,4]]},{\"preview\":\"\\t\\t\\tt.Errorf(\\\"%q: got %+v, want %+v\\\", test.data, got, test.want)\",\"lineNumber\":108,\"offsetAndLengths\":[[37,4]]},{\"preview\":\"\\t\\t\\tt.Errorf(\\\"%q: got %+v, want %+v\\\", test.data, got, test.want)\",\"lineNumber\":108,\"offsetAndLengths\":[[53,4]]},{\"preview\":\"\\t\\t\\tif test.error {\",\"lineNumber\":113,\"offsetAndLengths\":[[6,4]]},{\"preview\":\"\\t\\tif test.error {\",\"lineNumber\":119,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"\\t\\t\\tt.Errorf(\\\"%q: expected error\\\", test.data)\",\"lineNumber\":120,\"offsetAndLengths\":[[34,4]]},{\"preview\":\"\\t\\tif !bytes.Equal(data, test.data) {\",\"lineNumber\":123,\"offsetAndLengths\":[[24,4]]},{\"preview\":\"\\t\\t\\tt.Errorf(\\\"got JSON %q, want %q\\\", data, test.data)\",\"lineNumber\":124,\"offsetAndLengths\":[[42,4]]}]}],\"alert\":null,\"elapsedMilliseconds\":5}}}}"
    },
    "/.api/graphql-?Search--{\"query\":\"\\nquerySearch($query:String!,$version:SearchVersion!,$patternType:SearchPatternType!){\\nsearch(query:$query,version:$version,patternType:$patternType){\\nresults{\\n__typename\\nlimitHit\\nmatchCount\\napproximateResultCount\\nmissing{\\nname\\n}\\ncloning{\\nname\\n}\\nrepositoriesCount\\ntimedout{\\nname\\n}\\nindexUnavailable\\ndynamicFilters{\\nvalue\\nlabel\\ncount\\nlimitHit\\nkind\\n}\\nresults{\\n__typename\\n...onRepository{\\nid\\nname\\n\\n__typename\\nlabel{\\nhtml\\n}\\nurl\\nicon\\ndetail{\\nhtml\\n}\\nmatches{\\nurl\\nbody{\\ntext\\nhtml\\n}\\nhighlights{\\nline\\ncharacter\\nlength\\n}\\n}\\n\\n}\\n...onFileMatch{\\nfile{\\npath\\nurl\\ncommit{\\noid\\n}\\n}\\nrepository{\\nname\\nurl\\n}\\nrevSpec{\\n__typename\\n...onGitRef{\\ndisplayName\\nurl\\n}\\n...onGitRevSpecExpr{\\nexpr\\nobject{commit{url}}\\n}\\n...onGitObject{\\nabbreviatedOID\\ncommit{\\nurl\\n}\\n}\\n}\\nlimitHit\\nsymbols{\\nname\\ncontainerName\\nurl\\nkind\\n}\\nlineMatches{\\npreview\\nlineNumber\\noffsetAndLengths\\n}\\n}\\n...onCommitSearchResult{\\n\\n__typename\\nlabel{\\nhtml\\n}\\nurl\\nicon\\ndetail{\\nhtml\\n}\\nmatches{\\nurl\\nbody{\\ntext\\nhtml\\n}\\nhighlights{\\nline\\ncharacter\\nlength\\n}\\n}\\n\\n}\\n\\n}\\nalert{\\ntitle\\ndescription\\nproposedQueries{\\ndescription\\nquery\\n}\\n}\\nelapsedMilliseconds\\n}\\n}\\n}\\n\",\"variables\":{\"query\":\"test\",\"version\":\"V2\",\"patternType\":\"literal\"}}": {
        "status": 200,
        "contentType": "application/json",
        "body": "{\"data\":{\"search\":{\"results\":{\"__typename\":\"SearchResults\",\"limitHit\":false,\"matchCount\":397,\"approximateResultCount\":\"397\",\"missing\":[],\"cloning\":[],\"repositoriesCount\":4,\"timedout\":[],\"indexUnavailable\":false,\"dynamicFilters\":[{\"value\":\"lang:go\",\"label\":\"lang:go\",\"count\":30,\"limitHit\":false,\"kind\":\"lang\"},{\"value\":\"repo:^github\\\\.com/gorilla/mux$\",\"label\":\"github.com/gorilla/mux\",\"count\":308,\"limitHit\":false,\"kind\":\"repo\"},{\"value\":\"-file:_test\\\\.go$\",\"label\":\"-file:_test\\\\.go$\",\"count\":30,\"limitHit\":false,\"kind\":\"file\"},{\"value\":\"repo:^github\\\\.com/sourcegraph/jsonrpc2$\",\"label\":\"github.com/sourcegraph/jsonrpc2\",\"count\":89,\"limitHit\":false,\"kind\":\"repo\"},{\"value\":\"lang:yaml\",\"label\":\"lang:yaml\",\"count\":1,\"limitHit\":false,\"kind\":\"lang\"},{\"value\":\"lang:markdown\",\"label\":\"lang:markdown\",\"count\":28,\"limitHit\":false,\"kind\":\"lang\"}],\"results\":[{\"__typename\":\"FileMatch\",\"file\":{\"path\":\".circleci/config.yml\",\"url\":\"/github.com/gorilla/mux/-/blob/.circleci/config.yml\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"  # Base test configuration for Go library tests Each distinct version should\",\"lineNumber\":3,\"offsetAndLengths\":[[9,4]]},{\"preview\":\"  # Base test configuration for Go library tests Each distinct version should\",\"lineNumber\":3,\"offsetAndLengths\":[[43,4]]},{\"preview\":\"  \\\"test\\\": \\u0026test\",\"lineNumber\":5,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"  \\\"test\\\": \\u0026test\",\"lineNumber\":5,\"offsetAndLengths\":[[11,4]]},{\"preview\":\"      - image: circleci/golang:latest\",\"lineNumber\":7,\"offsetAndLengths\":[[33,4]]},{\"preview\":\"      # run \\\"go test\\\" on the package.\",\"lineNumber\":11,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"      # Only run gofmt, vet \\u0026 lint against the latest Go version\",\"lineNumber\":19,\"offsetAndLengths\":[[49,4]]},{\"preview\":\"            if [ \\\"${LATEST}\\\" = true ] \\u0026\\u0026 [ -z \\\"${SKIP_GOLINT}\\\" ]; then\",\"lineNumber\":23,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"            if [[ \\\"${LATEST}\\\" = true ]]; then\",\"lineNumber\":30,\"offsetAndLengths\":[[23,4]]},{\"preview\":\"            if [[ \\\"${LATEST}\\\" = true ]]; then\",\"lineNumber\":36,\"offsetAndLengths\":[[23,4]]},{\"preview\":\"      - run: go test -v -race ./...\",\"lineNumber\":39,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"  \\\"latest\\\":\",\"lineNumber\":41,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"    \\u003c\\u003c: *test\",\"lineNumber\":42,\"offsetAndLengths\":[[9,4]]},{\"preview\":\"      LATEST: true\",\"lineNumber\":44,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"    \\u003c\\u003c: *test\",\"lineNumber\":47,\"offsetAndLengths\":[[9,4]]},{\"preview\":\"    \\u003c\\u003c: *test\",\"lineNumber\":52,\"offsetAndLengths\":[[9,4]]},{\"preview\":\"    \\u003c\\u003c: *test\",\"lineNumber\":57,\"offsetAndLengths\":[[9,4]]},{\"preview\":\"    \\u003c\\u003c: *test\",\"lineNumber\":62,\"offsetAndLengths\":[[9,4]]},{\"preview\":\"    \\u003c\\u003c: *test\",\"lineNumber\":67,\"offsetAndLengths\":[[9,4]]},{\"preview\":\"    \\u003c\\u003c: *test\",\"lineNumber\":72,\"offsetAndLengths\":[[9,4]]},{\"preview\":\"      - \\\"latest\\\"\",\"lineNumber\":80,\"offsetAndLengths\":[[11,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"README.md\",\"url\":\"/github.com/gorilla/mux/-/blob/README.md\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"* Routes can be used as subrouters: nested routes are only tested if the parent route matches. This is useful to define groups of routes that share common conditions like a host, a path prefix or other repeated attributes. As a bonus, this optimizes request matching.\",\"lineNumber\":19,\"offsetAndLengths\":[[59,4]]},{\"preview\":\"* [Testing Handlers](#testing-handlers)\",\"lineNumber\":33,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"* [Testing Handlers](#testing-handlers)\",\"lineNumber\":33,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"With a [correctly configured](https://golang.org/doc/install#testing) Go toolchain:\",\"lineNumber\":40,\"offsetAndLengths\":[[61,4]]},{\"preview\":\"Routes are tested in the order they were added to the router. If two routes match, the first one wins:\",\"lineNumber\":142,\"offsetAndLengths\":[[11,4]]},{\"preview\":\"The three URL paths we registered above will only be tested if the domain is `www.example.com`, because the subrouter is tested first. This is not only convenient, but also optimizes request matching. You can create subrouters combining any attribute matchers accepted by a route.\",\"lineNumber\":167,\"offsetAndLengths\":[[53,4]]},{\"preview\":\"The three URL paths we registered above will only be tested if the domain is `www.example.com`, because the subrouter is tested first. This is not only convenient, but also optimizes request matching. You can create subrouters combining any attribute matchers accepted by a route.\",\"lineNumber\":167,\"offsetAndLengths\":[[121,4]]},{\"preview\":\"### Testing Handlers\",\"lineNumber\":649,\"offsetAndLengths\":[[4,4]]},{\"preview\":\"Testing handlers in a Go web application is straightforward, and _mux_ doesn't complicate this any further. Given two files: `endpoints.go` and `endpoints_test.go`, here's how we'd test an application using _mux_.\",\"lineNumber\":651,\"offsetAndLengths\":[[0,4]]},{\"preview\":\"Testing handlers in a Go web application is straightforward, and _mux_ doesn't complicate this any further. Given two files: `endpoints.go` and `endpoints_test.go`, here's how we'd test an application using _mux_.\",\"lineNumber\":651,\"offsetAndLengths\":[[155,4]]},{\"preview\":\"Testing handlers in a Go web application is straightforward, and _mux_ doesn't complicate this any further. Given two files: `endpoints.go` and `endpoints_test.go`, here's how we'd test an application using _mux_.\",\"lineNumber\":651,\"offsetAndLengths\":[[181,4]]},{\"preview\":\"    io.WriteString(w, `{\\\"alive\\\": true}`)\",\"lineNumber\":666,\"offsetAndLengths\":[[10,4]]},{\"preview\":\"Our test code:\",\"lineNumber\":677,\"offsetAndLengths\":[[4,4]]},{\"preview\":\"// endpoints_test.go\",\"lineNumber\":680,\"offsetAndLengths\":[[13,4]]},{\"preview\":\"    \\\"net/http/httptest\\\"\",\"lineNumber\":685,\"offsetAndLengths\":[[18,4]]},{\"preview\":\"    \\\"testing\\\"\",\"lineNumber\":686,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestHealthCheckHandler(t *testing.T) {\",\"lineNumber\":689,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestHealthCheckHandler(t *testing.T) {\",\"lineNumber\":689,\"offsetAndLengths\":[[31,4]]},{\"preview\":\"    rr := httptest.NewRecorder()\",\"lineNumber\":698,\"offsetAndLengths\":[[14,4]]},{\"preview\":\"[table-driven tests](https://dave.cheney.net/2013/06/09/writing-table-driven-tests-in-go) to test multiple\",\"lineNumber\":721,\"offsetAndLengths\":[[14,4]]},{\"preview\":\"[table-driven tests](https://dave.cheney.net/2013/06/09/writing-table-driven-tests-in-go) to test multiple\",\"lineNumber\":721,\"offsetAndLengths\":[[77,4]]},{\"preview\":\"[table-driven tests](https://dave.cheney.net/2013/06/09/writing-table-driven-tests-in-go) to test multiple\",\"lineNumber\":721,\"offsetAndLengths\":[[93,4]]},{\"preview\":\"Our test file, with a table-driven test of `routeVariables`:\",\"lineNumber\":735,\"offsetAndLengths\":[[4,4]]},{\"preview\":\"Our test file, with a table-driven test of `routeVariables`:\",\"lineNumber\":735,\"offsetAndLengths\":[[35,4]]},{\"preview\":\"// endpoints_test.go\",\"lineNumber\":738,\"offsetAndLengths\":[[13,4]]},{\"preview\":\"func TestMetricsHandler(t *testing.T) {\",\"lineNumber\":739,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestMetricsHandler(t *testing.T) {\",\"lineNumber\":739,\"offsetAndLengths\":[[27,4]]},{\"preview\":\"        rr := httptest.NewRecorder()\",\"lineNumber\":758,\"offsetAndLengths\":[[18,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"bench_test.go\",\"url\":\"/github.com/gorilla/mux/-/blob/bench_test.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"\\t\\\"net/http/httptest\\\"\",\"lineNumber\":8,\"offsetAndLengths\":[[15,4]]},{\"preview\":\"\\t\\\"testing\\\"\",\"lineNumber\":9,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"func BenchmarkMux(b *testing.B) {\",\"lineNumber\":12,\"offsetAndLengths\":[[21,4]]},{\"preview\":\"func BenchmarkMuxAlternativeInRegexp(b *testing.B) {\",\"lineNumber\":23,\"offsetAndLengths\":[[40,4]]},{\"preview\":\"func BenchmarkManyPathVariables(b *testing.B) {\",\"lineNumber\":36,\"offsetAndLengths\":[[35,4]]},{\"preview\":\"\\trecorder := httptest.NewRecorder()\",\"lineNumber\":43,\"offsetAndLengths\":[[17,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"doc.go\",\"url\":\"/github.com/gorilla/mux/-/blob/doc.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"\\t* Routes can be used as subrouters: nested routes are only tested if the\",\"lineNumber\":18,\"offsetAndLengths\":[[60,4]]},{\"preview\":\"The three URL paths we registered above will only be tested if the domain is\",\"lineNumber\":126,\"offsetAndLengths\":[[53,4]]},{\"preview\":\"\\\"www.example.com\\\", because the subrouter is tested first. This is not\",\"lineNumber\":127,\"offsetAndLengths\":[[44,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"example_authentication_middleware_test.go\",\"url\":\"/github.com/gorilla/mux/-/blob/example_authentication_middleware_test.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"package mux_test\",\"lineNumber\":0,\"offsetAndLengths\":[[12,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"example_cors_method_middleware_test.go\",\"url\":\"/github.com/gorilla/mux/-/blob/example_cors_method_middleware_test.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"package mux_test\",\"lineNumber\":0,\"offsetAndLengths\":[[12,4]]},{\"preview\":\"\\t\\\"net/http/httptest\\\"\",\"lineNumber\":5,\"offsetAndLengths\":[[15,4]]},{\"preview\":\"\\trw := httptest.NewRecorder()\",\"lineNumber\":23,\"offsetAndLengths\":[[11,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"example_route_test.go\",\"url\":\"/github.com/gorilla/mux/-/blob/example_route_test.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"package mux_test\",\"lineNumber\":0,\"offsetAndLengths\":[[12,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"middleware_test.go\",\"url\":\"/github.com/gorilla/mux/-/blob/middleware_test.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"\\t\\\"testing\\\"\",\"lineNumber\":5,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"type testMiddleware struct {\",\"lineNumber\":8,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func (tm *testMiddleware) Middleware(h http.Handler) http.Handler {\",\"lineNumber\":12,\"offsetAndLengths\":[[10,4]]},{\"preview\":\"func TestMiddlewareAdd(t *testing.T) {\",\"lineNumber\":21,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestMiddlewareAdd(t *testing.T) {\",\"lineNumber\":21,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"\\tmw := \\u0026testMiddleware{}\",\"lineNumber\":25,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"func TestMiddleware(t *testing.T) {\",\"lineNumber\":46,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestMiddleware(t *testing.T) {\",\"lineNumber\":46,\"offsetAndLengths\":[[23,4]]},{\"preview\":\"\\tmw := \\u0026testMiddleware{}\",\"lineNumber\":50,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tt.Run(\\\"regular middleware call\\\", func(t *testing.T) {\",\"lineNumber\":56,\"offsetAndLengths\":[[42,4]]},{\"preview\":\"\\tt.Run(\\\"not called for 404\\\", func(t *testing.T) {\",\"lineNumber\":63,\"offsetAndLengths\":[[37,4]]},{\"preview\":\"\\tt.Run(\\\"not called for method mismatch\\\", func(t *testing.T) {\",\"lineNumber\":71,\"offsetAndLengths\":[[49,4]]},{\"preview\":\"\\tt.Run(\\\"regular call using function middleware\\\", func(t *testing.T) {\",\"lineNumber\":79,\"offsetAndLengths\":[[57,4]]},{\"preview\":\"func TestMiddlewareSubrouter(t *testing.T) {\",\"lineNumber\":89,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestMiddlewareSubrouter(t *testing.T) {\",\"lineNumber\":89,\"offsetAndLengths\":[[32,4]]},{\"preview\":\"\\tmw := \\u0026testMiddleware{}\",\"lineNumber\":96,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tt.Run(\\\"not called for route outside subrouter\\\", func(t *testing.T) {\",\"lineNumber\":102,\"offsetAndLengths\":[[57,4]]},{\"preview\":\"\\tt.Run(\\\"not called for subrouter root 404\\\", func(t *testing.T) {\",\"lineNumber\":109,\"offsetAndLengths\":[[52,4]]},{\"preview\":\"\\tt.Run(\\\"called once for route inside subrouter\\\", func(t *testing.T) {\",\"lineNumber\":117,\"offsetAndLengths\":[[57,4]]},{\"preview\":\"\\tt.Run(\\\"not called for 404 inside subrouter\\\", func(t *testing.T) {\",\"lineNumber\":125,\"offsetAndLengths\":[[54,4]]},{\"preview\":\"\\tt.Run(\\\"middleware added to router\\\", func(t *testing.T) {\",\"lineNumber\":133,\"offsetAndLengths\":[[45,4]]},{\"preview\":\"\\t\\tt.Run(\\\"called once for route outside subrouter\\\", func(t *testing.T) {\",\"lineNumber\":136,\"offsetAndLengths\":[[59,4]]},{\"preview\":\"\\t\\tt.Run(\\\"called twice for route inside subrouter\\\", func(t *testing.T) {\",\"lineNumber\":144,\"offsetAndLengths\":[[59,4]]},{\"preview\":\"func TestMiddlewareExecution(t *testing.T) {\",\"lineNumber\":154,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestMiddlewareExecution(t *testing.T) {\",\"lineNumber\":154,\"offsetAndLengths\":[[32,4]]},{\"preview\":\"\\tt.Run(\\\"responds normally without middleware\\\", func(t *testing.T) {\",\"lineNumber\":163,\"offsetAndLengths\":[[55,4]]},{\"preview\":\"\\tt.Run(\\\"responds with handler and middleware response\\\", func(t *testing.T) {\",\"lineNumber\":174,\"offsetAndLengths\":[[64,4]]},{\"preview\":\"func TestMiddlewareNotFound(t *testing.T) {\",\"lineNumber\":192,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestMiddlewareNotFound(t *testing.T) {\",\"lineNumber\":192,\"offsetAndLengths\":[[31,4]]},{\"preview\":\"\\t// Test not found call with default handler\",\"lineNumber\":207,\"offsetAndLengths\":[[4,4]]},{\"preview\":\"\\tt.Run(\\\"not called\\\", func(t *testing.T) {\",\"lineNumber\":208,\"offsetAndLengths\":[[29,4]]},{\"preview\":\"\\tt.Run(\\\"not called with custom not found handler\\\", func(t *testing.T) {\",\"lineNumber\":218,\"offsetAndLengths\":[[59,4]]},{\"preview\":\"func TestMiddlewareMethodMismatch(t *testing.T) {\",\"lineNumber\":233,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestMiddlewareMethodMismatch(t *testing.T) {\",\"lineNumber\":233,\"offsetAndLengths\":[[37,4]]},{\"preview\":\"\\tt.Run(\\\"not called\\\", func(t *testing.T) {\",\"lineNumber\":249,\"offsetAndLengths\":[[29,4]]},{\"preview\":\"\\tt.Run(\\\"not called with custom method not allowed handler\\\", func(t *testing.T) {\",\"lineNumber\":259,\"offsetAndLengths\":[[68,4]]},{\"preview\":\"func TestMiddlewareNotFoundSubrouter(t *testing.T) {\",\"lineNumber\":274,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestMiddlewareNotFoundSubrouter(t *testing.T) {\",\"lineNumber\":274,\"offsetAndLengths\":[[40,4]]},{\"preview\":\"\\tt.Run(\\\"not called\\\", func(t *testing.T) {\",\"lineNumber\":295,\"offsetAndLengths\":[[29,4]]},{\"preview\":\"\\tt.Run(\\\"not called with custom not found handler\\\", func(t *testing.T) {\",\"lineNumber\":305,\"offsetAndLengths\":[[59,4]]},{\"preview\":\"func TestMiddlewareMethodMismatchSubrouter(t *testing.T) {\",\"lineNumber\":320,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestMiddlewareMethodMismatchSubrouter(t *testing.T) {\",\"lineNumber\":320,\"offsetAndLengths\":[[46,4]]},{\"preview\":\"\\tt.Run(\\\"not called\\\", func(t *testing.T) {\",\"lineNumber\":341,\"offsetAndLengths\":[[29,4]]},{\"preview\":\"\\tt.Run(\\\"not called with custom method not allowed handler\\\", func(t *testing.T) {\",\"lineNumber\":351,\"offsetAndLengths\":[[68,4]]},{\"preview\":\"func TestCORSMethodMiddleware(t *testing.T) {\",\"lineNumber\":366,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestCORSMethodMiddleware(t *testing.T) {\",\"lineNumber\":366,\"offsetAndLengths\":[[33,4]]},{\"preview\":\"\\ttestCases := []struct {\",\"lineNumber\":367,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor _, tt := range testCases {\",\"lineNumber\":453,\"offsetAndLengths\":[[20,4]]},{\"preview\":\"\\t\\tt.Run(tt.name, func(t *testing.T) {\",\"lineNumber\":454,\"offsetAndLengths\":[[25,4]]},{\"preview\":\"func TestCORSMethodMiddlewareSubrouter(t *testing.T) {\",\"lineNumber\":480,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestCORSMethodMiddlewareSubrouter(t *testing.T) {\",\"lineNumber\":480,\"offsetAndLengths\":[[42,4]]},{\"preview\":\"\\tsubrouter := router.PathPrefix(\\\"/test\\\").Subrouter()\",\"lineNumber\":483,\"offsetAndLengths\":[[34,4]]},{\"preview\":\"\\treq := newRequest(\\\"GET\\\", \\\"/test/hello/asdf\\\")\",\"lineNumber\":490,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"func TestMiddlewareOnMultiSubrouter(t *testing.T) {\",\"lineNumber\":500,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestMiddlewareOnMultiSubrouter(t *testing.T) {\",\"lineNumber\":500,\"offsetAndLengths\":[[39,4]]},{\"preview\":\"\\tt.Run(\\\"/first uses first middleware\\\", func(t *testing.T) {\",\"lineNumber\":535,\"offsetAndLengths\":[[47,4]]},{\"preview\":\"\\tt.Run(\\\"/second uses second middleware\\\", func(t *testing.T) {\",\"lineNumber\":545,\"offsetAndLengths\":[[49,4]]},{\"preview\":\"\\tt.Run(\\\"uses not found handler\\\", func(t *testing.T) {\",\"lineNumber\":555,\"offsetAndLengths\":[[41,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"mux_httpserver_test.go\",\"url\":\"/github.com/gorilla/mux/-/blob/mux_httpserver_test.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"\\t\\\"net/http/httptest\\\"\",\"lineNumber\":8,\"offsetAndLengths\":[[15,4]]},{\"preview\":\"\\t\\\"testing\\\"\",\"lineNumber\":9,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"func TestSchemeMatchers(t *testing.T) {\",\"lineNumber\":12,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestSchemeMatchers(t *testing.T) {\",\"lineNumber\":12,\"offsetAndLengths\":[[27,4]]},{\"preview\":\"\\tassertResponseBody := func(t *testing.T, s *httptest.Server, expectedBody string) {\",\"lineNumber\":21,\"offsetAndLengths\":[[31,4]]},{\"preview\":\"\\tassertResponseBody := func(t *testing.T, s *httptest.Server, expectedBody string) {\",\"lineNumber\":21,\"offsetAndLengths\":[[49,4]]},{\"preview\":\"\\tt.Run(\\\"httpServer\\\", func(t *testing.T) {\",\"lineNumber\":38,\"offsetAndLengths\":[[29,4]]},{\"preview\":\"\\t\\ts := httptest.NewServer(router)\",\"lineNumber\":39,\"offsetAndLengths\":[[11,4]]},{\"preview\":\"\\tt.Run(\\\"httpsServer\\\", func(t *testing.T) {\",\"lineNumber\":43,\"offsetAndLengths\":[[30,4]]},{\"preview\":\"\\t\\ts := httptest.NewTLSServer(router)\",\"lineNumber\":44,\"offsetAndLengths\":[[11,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"mux_test.go\",\"url\":\"/github.com/gorilla/mux/-/blob/mux_test.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":true,\"symbols\":[],\"lineMatches\":[{\"preview\":\"\\t\\\"net/http/httptest\\\"\",\"lineNumber\":14,\"offsetAndLengths\":[[15,4]]},{\"preview\":\"\\t\\\"testing\\\"\",\"lineNumber\":18,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"type routeTest struct {\",\"lineNumber\":34,\"offsetAndLengths\":[[10,4]]},{\"preview\":\"\\ttitle           string            // title of the test\",\"lineNumber\":35,\"offsetAndLengths\":[[51,4]]},{\"preview\":\"\\troute           *Route            // the route being tested\",\"lineNumber\":36,\"offsetAndLengths\":[[54,4]]},{\"preview\":\"\\trequest         *http.Request     // a request to test the route\",\"lineNumber\":37,\"offsetAndLengths\":[[51,4]]},{\"preview\":\"func TestHost(t *testing.T) {\",\"lineNumber\":53,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestHost(t *testing.T) {\",\"lineNumber\":53,\"offsetAndLengths\":[[17,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":55,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":55,\"offsetAndLengths\":[[17,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":219,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":219,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":220,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":220,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":221,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":221,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":222,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":222,\"offsetAndLengths\":[[19,4]]},{\"preview\":\"func TestPath(t *testing.T) {\",\"lineNumber\":227,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestPath(t *testing.T) {\",\"lineNumber\":227,\"offsetAndLengths\":[[17,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":228,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":228,\"offsetAndLengths\":[[17,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":453,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":453,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":454,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":454,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":455,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":455,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":456,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":456,\"offsetAndLengths\":[[19,4]]},{\"preview\":\"\\t\\t\\ttestUseEscapedRoute(t, test)\",\"lineNumber\":457,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestUseEscapedRoute(t, test)\",\"lineNumber\":457,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"\\t\\t\\ttestRegexp(t, test)\",\"lineNumber\":458,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestRegexp(t, test)\",\"lineNumber\":458,\"offsetAndLengths\":[[17,4]]},{\"preview\":\"func TestPathPrefix(t *testing.T) {\",\"lineNumber\":463,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestPathPrefix(t *testing.T) {\",\"lineNumber\":463,\"offsetAndLengths\":[[23,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":464,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":464,\"offsetAndLengths\":[[17,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":534,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":534,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":535,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":535,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":536,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":536,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":537,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":537,\"offsetAndLengths\":[[19,4]]},{\"preview\":\"\\t\\t\\ttestUseEscapedRoute(t, test)\",\"lineNumber\":538,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestUseEscapedRoute(t, test)\",\"lineNumber\":538,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"func TestSchemeHostPath(t *testing.T) {\",\"lineNumber\":543,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestSchemeHostPath(t *testing.T) {\",\"lineNumber\":543,\"offsetAndLengths\":[[27,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":544,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":544,\"offsetAndLengths\":[[17,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":643,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":643,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":644,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":644,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":645,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":645,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":646,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":646,\"offsetAndLengths\":[[19,4]]},{\"preview\":\"\\t\\t\\ttestUseEscapedRoute(t, test)\",\"lineNumber\":647,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestUseEscapedRoute(t, test)\",\"lineNumber\":647,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"func TestHeaders(t *testing.T) {\",\"lineNumber\":652,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestHeaders(t *testing.T) {\",\"lineNumber\":652,\"offsetAndLengths\":[[20,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":665,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":665,\"offsetAndLengths\":[[17,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":704,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":704,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":705,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":705,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":706,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":706,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":707,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":707,\"offsetAndLengths\":[[19,4]]},{\"preview\":\"func TestMethods(t *testing.T) {\",\"lineNumber\":712,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestMethods(t *testing.T) {\",\"lineNumber\":712,\"offsetAndLengths\":[[20,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":713,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":713,\"offsetAndLengths\":[[17,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":756,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":756,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":757,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":757,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":758,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestRoute(t, test)\",\"lineNumber\":758,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":759,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":759,\"offsetAndLengths\":[[19,4]]},{\"preview\":\"\\t\\t\\ttestMethods(t, test)\",\"lineNumber\":760,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestMethods(t, test)\",\"lineNumber\":760,\"offsetAndLengths\":[[18,4]]},{\"preview\":\"func TestQueries(t *testing.T) {\",\"lineNumber\":765,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestQueries(t *testing.T) {\",\"lineNumber\":765,\"offsetAndLengths\":[[20,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":766,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\ttests := []routeTest{\",\"lineNumber\":766,\"offsetAndLengths\":[[17,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":1065,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":1065,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":1066,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\t\\tt.Run(test.title, func(t *testing.T) {\",\"lineNumber\":1066,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":1067,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestTemplate(t, test)\",\"lineNumber\":1067,\"offsetAndLengths\":[[19,4]]},{\"preview\":\"\\t\\t\\ttestQueriesTemplates(t, test)\",\"lineNumber\":1068,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"\\t\\t\\ttestQueriesTemplates(t, test)\",\"lineNumber\":1068,\"offsetAndLengths\":[[27,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"old_test.go\",\"url\":\"/github.com/gorilla/mux/-/blob/old_test.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"// Old tests ported to Go1. This is a mess. Want to drop it one day.\",\"lineNumber\":0,\"offsetAndLengths\":[[7,4]]},{\"preview\":\"\\t\\\"testing\\\"\",\"lineNumber\":11,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"// records its mutations for later inspection in tests.\",\"lineNumber\":22,\"offsetAndLengths\":[[49,4]]},{\"preview\":\"func TestRouteMatchers(t *testing.T) {\",\"lineNumber\":66,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestRouteMatchers(t *testing.T) {\",\"lineNumber\":66,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"type headerMatcherTest struct {\",\"lineNumber\":224,\"offsetAndLengths\":[[18,4]]},{\"preview\":\"var headerMatcherTests = []headerMatcherTest{\",\"lineNumber\":230,\"offsetAndLengths\":[[17,4]]},{\"preview\":\"var headerMatcherTests = []headerMatcherTest{\",\"lineNumber\":230,\"offsetAndLengths\":[[40,4]]},{\"preview\":\"type hostMatcherTest struct {\",\"lineNumber\":248,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"var hostMatcherTests = []hostMatcherTest{\",\"lineNumber\":255,\"offsetAndLengths\":[[15,4]]},{\"preview\":\"var hostMatcherTests = []hostMatcherTest{\",\"lineNumber\":255,\"offsetAndLengths\":[[36,4]]},{\"preview\":\"type methodMatcherTest struct {\",\"lineNumber\":270,\"offsetAndLengths\":[[18,4]]},{\"preview\":\"var methodMatcherTests = []methodMatcherTest{\",\"lineNumber\":276,\"offsetAndLengths\":[[17,4]]},{\"preview\":\"var methodMatcherTests = []methodMatcherTest{\",\"lineNumber\":276,\"offsetAndLengths\":[[40,4]]},{\"preview\":\"type pathMatcherTest struct {\",\"lineNumber\":299,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"var pathMatcherTests = []pathMatcherTest{\",\"lineNumber\":306,\"offsetAndLengths\":[[15,4]]},{\"preview\":\"var pathMatcherTests = []pathMatcherTest{\",\"lineNumber\":306,\"offsetAndLengths\":[[36,4]]},{\"preview\":\"type schemeMatcherTest struct {\",\"lineNumber\":321,\"offsetAndLengths\":[[18,4]]},{\"preview\":\"var schemeMatcherTests = []schemeMatcherTest{\",\"lineNumber\":327,\"offsetAndLengths\":[[17,4]]},{\"preview\":\"var schemeMatcherTests = []schemeMatcherTest{\",\"lineNumber\":327,\"offsetAndLengths\":[[40,4]]},{\"preview\":\"type urlBuildingTest struct {\",\"lineNumber\":350,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"var urlBuildingTests = []urlBuildingTest{\",\"lineNumber\":356,\"offsetAndLengths\":[[15,4]]},{\"preview\":\"var urlBuildingTests = []urlBuildingTest{\",\"lineNumber\":356,\"offsetAndLengths\":[[36,4]]},{\"preview\":\"func TestHeaderMatcher(t *testing.T) {\",\"lineNumber\":394,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestHeaderMatcher(t *testing.T) {\",\"lineNumber\":394,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"\\tfor _, v := range headerMatcherTests {\",\"lineNumber\":395,\"offsetAndLengths\":[[32,4]]},{\"preview\":\"func TestHostMatcher(t *testing.T) {\",\"lineNumber\":412,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestHostMatcher(t *testing.T) {\",\"lineNumber\":412,\"offsetAndLengths\":[[24,4]]},{\"preview\":\"\\tfor _, v := range hostMatcherTests {\",\"lineNumber\":413,\"offsetAndLengths\":[[30,4]]},{\"preview\":\"func TestMethodMatcher(t *testing.T) {\",\"lineNumber\":442,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestMethodMatcher(t *testing.T) {\",\"lineNumber\":442,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"\\tfor _, v := range methodMatcherTests {\",\"lineNumber\":443,\"offsetAndLengths\":[[32,4]]},{\"preview\":\"func TestPathMatcher(t *testing.T) {\",\"lineNumber\":457,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestPathMatcher(t *testing.T) {\",\"lineNumber\":457,\"offsetAndLengths\":[[24,4]]},{\"preview\":\"\\tfor _, v := range pathMatcherTests {\",\"lineNumber\":458,\"offsetAndLengths\":[[30,4]]},{\"preview\":\"func TestSchemeMatcher(t *testing.T) {\",\"lineNumber\":487,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestSchemeMatcher(t *testing.T) {\",\"lineNumber\":487,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"\\tfor _, v := range schemeMatcherTests {\",\"lineNumber\":488,\"offsetAndLengths\":[[32,4]]},{\"preview\":\"func TestUrlBuilding(t *testing.T) {\",\"lineNumber\":502,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestUrlBuilding(t *testing.T) {\",\"lineNumber\":502,\"offsetAndLengths\":[[24,4]]},{\"preview\":\"\\tfor _, v := range urlBuildingTests {\",\"lineNumber\":504,\"offsetAndLengths\":[[30,4]]},{\"preview\":\"func TestMatchedRouteName(t *testing.T) {\",\"lineNumber\":525,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestMatchedRouteName(t *testing.T) {\",\"lineNumber\":525,\"offsetAndLengths\":[[29,4]]},{\"preview\":\"func TestSubRouting(t *testing.T) {\",\"lineNumber\":545,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestSubRouting(t *testing.T) {\",\"lineNumber\":545,\"offsetAndLengths\":[[23,4]]},{\"preview\":\"func TestVariableNames(t *testing.T) {\",\"lineNumber\":568,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestVariableNames(t *testing.T) {\",\"lineNumber\":568,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"func TestRedirectSlash(t *testing.T) {\",\"lineNumber\":575,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestRedirectSlash(t *testing.T) {\",\"lineNumber\":575,\"offsetAndLengths\":[[26,4]]},{\"preview\":\"// Test for the new regexp library, still not available in stable Go.\",\"lineNumber\":631,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"func TestNewRegexp(t *testing.T) {\",\"lineNumber\":632,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestNewRegexp(t *testing.T) {\",\"lineNumber\":632,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\ttests := map[string]map[string][]string{\",\"lineNumber\":636,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor pattern, paths := range tests {\",\"lineNumber\":675,\"offsetAndLengths\":[[29,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"regexp.go\",\"url\":\"/github.com/gorilla/mux/-/blob/regexp.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"\\tpattern.WriteString(regexp.QuoteMeta(raw))\",\"lineNumber\":102,\"offsetAndLengths\":[[12,4]]},{\"preview\":\"\\t\\tpattern.WriteString(\\\"[/]?\\\")\",\"lineNumber\":104,\"offsetAndLengths\":[[13,4]]},{\"preview\":\"\\t\\t\\tpattern.WriteString(defaultPattern)\",\"lineNumber\":109,\"offsetAndLengths\":[[14,4]]},{\"preview\":\"\\treverse.WriteString(raw)\",\"lineNumber\":122,\"offsetAndLengths\":[[12,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"regexp_test.go\",\"url\":\"/github.com/gorilla/mux/-/blob/regexp_test.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"\\t\\\"testing\\\"\",\"lineNumber\":6,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"func Test_findFirstQueryKey(t *testing.T) {\",\"lineNumber\":9,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func Test_findFirstQueryKey(t *testing.T) {\",\"lineNumber\":9,\"offsetAndLengths\":[[31,4]]},{\"preview\":\"\\ttests := []string{\",\"lineNumber\":10,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor _, query := range tests {\",\"lineNumber\":22,\"offsetAndLengths\":[[23,4]]},{\"preview\":\"\\t\\tt.Run(query, func(t *testing.T) {\",\"lineNumber\":23,\"offsetAndLengths\":[[23,4]]},{\"preview\":\"\\t\\t\\t\\tt.Run(key, func(t *testing.T) {\",\"lineNumber\":27,\"offsetAndLengths\":[[23,4]]},{\"preview\":\"func Benchmark_findQueryKey(b *testing.B) {\",\"lineNumber\":41,\"offsetAndLengths\":[[31,4]]},{\"preview\":\"\\ttests := []string{\",\"lineNumber\":42,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor i, query := range tests {\",\"lineNumber\":49,\"offsetAndLengths\":[[23,4]]},{\"preview\":\"\\t\\tb.Run(strconv.Itoa(i), func(b *testing.B) {\",\"lineNumber\":50,\"offsetAndLengths\":[[33,4]]},{\"preview\":\"func Benchmark_findQueryKeyGoLib(b *testing.B) {\",\"lineNumber\":64,\"offsetAndLengths\":[[36,4]]},{\"preview\":\"\\ttests := []string{\",\"lineNumber\":65,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor i, query := range tests {\",\"lineNumber\":72,\"offsetAndLengths\":[[23,4]]},{\"preview\":\"\\t\\tb.Run(strconv.Itoa(i), func(b *testing.B) {\",\"lineNumber\":73,\"offsetAndLengths\":[[33,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"route.go\",\"url\":\"/github.com/gorilla/mux/-/blob/route.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"// It will test the inner routes only if the parent route matched. For example:\",\"lineNumber\":473,\"offsetAndLengths\":[[11,4]]},{\"preview\":\"// Here, the routes registered in the subrouter won't be tested if the host\",\"lineNumber\":481,\"offsetAndLengths\":[[57,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"test_helpers.go\",\"url\":\"/github.com/gorilla/mux/-/blob/test_helpers.go\",\"commit\":{\"oid\":\"75dcda0896e109a2a22c9315bca3bb21b87b2ba5\"}},\"repository\":{\"name\":\"github.com/gorilla/mux\",\"url\":\"/github.com/gorilla/mux\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"// mux.Vars for testing route behaviour. Arguments are not modified, a shallow\",\"lineNumber\":9,\"offsetAndLengths\":[[16,4]]},{\"preview\":\"// This API should only be used for testing purposes; it provides a way to\",\"lineNumber\":12,\"offsetAndLengths\":[[36,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\".github/workflows/lsif.yml\",\"url\":\"/github.com/sourcegraph/jsonrpc2/-/blob/.github/workflows/lsif.yml\",\"commit\":{\"oid\":\"96c4efab7ee28f3d1cf1d248a0139cea37368b18\"}},\"repository\":{\"name\":\"github.com/sourcegraph/jsonrpc2\",\"url\":\"/github.com/sourcegraph/jsonrpc2\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"    runs-on: ubuntu-latest\",\"lineNumber\":5,\"offsetAndLengths\":[[22,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\".travis.yml\",\"url\":\"/github.com/sourcegraph/jsonrpc2/-/blob/.travis.yml\",\"commit\":{\"oid\":\"96c4efab7ee28f3d1cf1d248a0139cea37368b18\"}},\"repository\":{\"name\":\"github.com/sourcegraph/jsonrpc2\",\"url\":\"/github.com/sourcegraph/jsonrpc2\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\" - go test -race -v ./...\",\"lineNumber\":5,\"offsetAndLengths\":[[6,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"codec_test.go\",\"url\":\"/github.com/sourcegraph/jsonrpc2/-/blob/codec_test.go\",\"commit\":{\"oid\":\"96c4efab7ee28f3d1cf1d248a0139cea37368b18\"}},\"repository\":{\"name\":\"github.com/sourcegraph/jsonrpc2\",\"url\":\"/github.com/sourcegraph/jsonrpc2\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"\\t\\\"testing\\\"\",\"lineNumber\":6,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"func TestVarintObjectCodec(t *testing.T) {\",\"lineNumber\":9,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestVarintObjectCodec(t *testing.T) {\",\"lineNumber\":9,\"offsetAndLengths\":[[30,4]]},{\"preview\":\"func TestVSCodeObjectCodec_ReadObject(t *testing.T) {\",\"lineNumber\":24,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestVSCodeObjectCodec_ReadObject(t *testing.T) {\",\"lineNumber\":24,\"offsetAndLengths\":[[41,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"jsonrpc2_test.go\",\"url\":\"/github.com/sourcegraph/jsonrpc2/-/blob/jsonrpc2_test.go\",\"commit\":{\"oid\":\"96c4efab7ee28f3d1cf1d248a0139cea37368b18\"}},\"repository\":{\"name\":\"github.com/sourcegraph/jsonrpc2\",\"url\":\"/github.com/sourcegraph/jsonrpc2\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"package jsonrpc2_test\",\"lineNumber\":0,\"offsetAndLengths\":[[17,4]]},{\"preview\":\"\\t\\\"net/http/httptest\\\"\",\"lineNumber\":10,\"offsetAndLengths\":[[15,4]]},{\"preview\":\"\\t\\\"testing\\\"\",\"lineNumber\":13,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"func TestRequest_MarshalJSON_jsonrpc(t *testing.T) {\",\"lineNumber\":21,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestRequest_MarshalJSON_jsonrpc(t *testing.T) {\",\"lineNumber\":21,\"offsetAndLengths\":[[40,4]]},{\"preview\":\"func TestResponse_MarshalJSON_jsonrpc(t *testing.T) {\",\"lineNumber\":31,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestResponse_MarshalJSON_jsonrpc(t *testing.T) {\",\"lineNumber\":31,\"offsetAndLengths\":[[41,4]]},{\"preview\":\"func TestResponseMarshalJSON_Notif(t *testing.T) {\",\"lineNumber\":42,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestResponseMarshalJSON_Notif(t *testing.T) {\",\"lineNumber\":42,\"offsetAndLengths\":[[38,4]]},{\"preview\":\"\\ttests := map[*jsonrpc2.Request]bool{\",\"lineNumber\":43,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor r, wantIDKey := range tests {\",\"lineNumber\":50,\"offsetAndLengths\":[[27,4]]},{\"preview\":\"func TestResponseUnmarshalJSON_Notif(t *testing.T) {\",\"lineNumber\":62,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestResponseUnmarshalJSON_Notif(t *testing.T) {\",\"lineNumber\":62,\"offsetAndLengths\":[[40,4]]},{\"preview\":\"\\ttests := map[string]bool{\",\"lineNumber\":63,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor s, want := range tests {\",\"lineNumber\":70,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"// testHandlerA is the \\\"server\\\" handler.\",\"lineNumber\":81,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"type testHandlerA struct{ t *testing.T }\",\"lineNumber\":82,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"type testHandlerA struct{ t *testing.T }\",\"lineNumber\":82,\"offsetAndLengths\":[[29,4]]},{\"preview\":\"func (h *testHandlerA) Handle(ctx context.Context, conn *jsonrpc2.Conn, req *jsonrpc2.Request) {\",\"lineNumber\":84,\"offsetAndLengths\":[[9,4]]},{\"preview\":\"// testHandlerB is the \\\"client\\\" handler.\",\"lineNumber\":97,\"offsetAndLengths\":[[3,4]]},{\"preview\":\"type testHandlerB struct {\",\"lineNumber\":98,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"\\tt   *testing.T\",\"lineNumber\":99,\"offsetAndLengths\":[[6,4]]},{\"preview\":\"func (h *testHandlerB) Handle(ctx context.Context, conn *jsonrpc2.Conn, req *jsonrpc2.Request) {\",\"lineNumber\":104,\"offsetAndLengths\":[[9,4]]},{\"preview\":\"\\th.t.Errorf(\\\"testHandlerB got unexpected request %+v\\\", req)\",\"lineNumber\":111,\"offsetAndLengths\":[[13,4]]},{\"preview\":\"func TestClientServer(t *testing.T) {\",\"lineNumber\":114,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestClientServer(t *testing.T) {\",\"lineNumber\":114,\"offsetAndLengths\":[[25,4]]},{\"preview\":\"\\tt.Run(\\\"tcp\\\", func(t *testing.T) {\",\"lineNumber\":115,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tha := testHandlerA{t: t}\",\"lineNumber\":134,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\t\\ttestClientServer(ctx, t, jsonrpc2.NewBufferedStream(conn, jsonrpc2.VarintObjectCodec{}))\",\"lineNumber\":148,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"\\t\\t\\u003c-done // ensure Serve's error return (if any) is caught by this test\",\"lineNumber\":151,\"offsetAndLengths\":[[67,4]]},{\"preview\":\"\\tt.Run(\\\"websocket\\\", func(t *testing.T) {\",\"lineNumber\":153,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"\\t\\tha := testHandlerA{t: t}\",\"lineNumber\":157,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\t\\ts := httptest.NewServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\",\"lineNumber\":159,\"offsetAndLengths\":[[11,4]]},{\"preview\":\"\\t\\ttestClientServer(ctx, t, websocketjsonrpc2.NewObjectStream(c))\",\"lineNumber\":177,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"\\t\\t\\u003c-done // keep the test running until the WebSocket disconnects (to avoid missing errors)\",\"lineNumber\":179,\"offsetAndLengths\":[[21,4]]},{\"preview\":\"func testClientServer(ctx context.Context, t *testing.T, stream jsonrpc2.ObjectStream) {\",\"lineNumber\":183,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func testClientServer(ctx context.Context, t *testing.T, stream jsonrpc2.ObjectStream) {\",\"lineNumber\":183,\"offsetAndLengths\":[[46,4]]},{\"preview\":\"\\thb := testHandlerB{t: t}\",\"lineNumber\":184,\"offsetAndLengths\":[[7,4]]},{\"preview\":\"\\t\\tt.Errorf(\\\"testHandlerB got %d notifications, want %d\\\", len(hb.got), n)\",\"lineNumber\":208,\"offsetAndLengths\":[[12,4]]},{\"preview\":\"func TestPickID(t *testing.T) {\",\"lineNumber\":245,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestPickID(t *testing.T) {\",\"lineNumber\":245,\"offsetAndLengths\":[[19,4]]},{\"preview\":\"\\t\\t// This is the actual test, every 3rd request we specify the\",\"lineNumber\":268,\"offsetAndLengths\":[[24,4]]},{\"preview\":\"func TestHandlerBlocking(t *testing.T) {\",\"lineNumber\":289,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestHandlerBlocking(t *testing.T) {\",\"lineNumber\":289,\"offsetAndLengths\":[[28,4]]},{\"preview\":\"func TestConn_DisconnectNotify_EOF(t *testing.T) {\",\"lineNumber\":355,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestConn_DisconnectNotify_EOF(t *testing.T) {\",\"lineNumber\":355,\"offsetAndLengths\":[[38,4]]},{\"preview\":\"func TestConn_DisconnectNotify_Close(t *testing.T) {\",\"lineNumber\":364,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestConn_DisconnectNotify_Close(t *testing.T) {\",\"lineNumber\":364,\"offsetAndLengths\":[[40,4]]},{\"preview\":\"func TestConn_DisconnectNotify_Close_async(t *testing.T) {\",\"lineNumber\":376,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestConn_DisconnectNotify_Close_async(t *testing.T) {\",\"lineNumber\":376,\"offsetAndLengths\":[[46,4]]},{\"preview\":\"func TestConn_Close_waitingForResponse(t *testing.T) {\",\"lineNumber\":393,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestConn_Close_waitingForResponse(t *testing.T) {\",\"lineNumber\":393,\"offsetAndLengths\":[[42,4]]}]},{\"__typename\":\"FileMatch\",\"file\":{\"path\":\"object_test.go\",\"url\":\"/github.com/sourcegraph/jsonrpc2/-/blob/object_test.go\",\"commit\":{\"oid\":\"96c4efab7ee28f3d1cf1d248a0139cea37368b18\"}},\"repository\":{\"name\":\"github.com/sourcegraph/jsonrpc2\",\"url\":\"/github.com/sourcegraph/jsonrpc2\"},\"revSpec\":null,\"limitHit\":false,\"symbols\":[],\"lineMatches\":[{\"preview\":\"\\t\\\"testing\\\"\",\"lineNumber\":6,\"offsetAndLengths\":[[2,4]]},{\"preview\":\"func TestAnyMessage(t *testing.T) {\",\"lineNumber\":9,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestAnyMessage(t *testing.T) {\",\"lineNumber\":9,\"offsetAndLengths\":[[23,4]]},{\"preview\":\"\\ttests := map[string]struct {\",\"lineNumber\":10,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor s, want := range tests {\",\"lineNumber\":21,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"func TestRequest_MarshalUnmarshalJSON(t *testing.T) {\",\"lineNumber\":38,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestRequest_MarshalUnmarshalJSON(t *testing.T) {\",\"lineNumber\":38,\"offsetAndLengths\":[[41,4]]},{\"preview\":\"\\ttests := []struct {\",\"lineNumber\":41,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":58,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":58,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tif err := json.Unmarshal(test.data, \\u0026got); err != nil {\",\"lineNumber\":60,\"offsetAndLengths\":[[27,4]]},{\"preview\":\"\\t\\tif !reflect.DeepEqual(got, test.want) {\",\"lineNumber\":64,\"offsetAndLengths\":[[29,4]]},{\"preview\":\"\\t\\t\\tt.Errorf(\\\"%q: got %+v, want %+v\\\", test.data, got, test.want)\",\"lineNumber\":65,\"offsetAndLengths\":[[37,4]]},{\"preview\":\"\\t\\t\\tt.Errorf(\\\"%q: got %+v, want %+v\\\", test.data, got, test.want)\",\"lineNumber\":65,\"offsetAndLengths\":[[53,4]]},{\"preview\":\"\\t\\tif !bytes.Equal(data, test.data) {\",\"lineNumber\":73,\"offsetAndLengths\":[[24,4]]},{\"preview\":\"\\t\\t\\tt.Errorf(\\\"got JSON %q, want %q\\\", data, test.data)\",\"lineNumber\":74,\"offsetAndLengths\":[[42,4]]},{\"preview\":\"func TestResponse_MarshalUnmarshalJSON(t *testing.T) {\",\"lineNumber\":79,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"func TestResponse_MarshalUnmarshalJSON(t *testing.T) {\",\"lineNumber\":79,\"offsetAndLengths\":[[42,4]]},{\"preview\":\"\\ttests := []struct {\",\"lineNumber\":82,\"offsetAndLengths\":[[1,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":101,\"offsetAndLengths\":[[8,4]]},{\"preview\":\"\\tfor _, test := range tests {\",\"lineNumber\":101,\"offsetAndLengths\":[[22,4]]},{\"preview\":\"\\t\\tif err := json.Unmarshal(test.data, \\u0026got); err != nil {\",\"lineNumber\":103,\"offsetAndLengths\":[[27,4]]},{\"preview\":\"\\t\\tif !reflect.DeepEqual(got, test.want) {\",\"lineNumber\":107,\"offsetAndLengths\":[[29,4]]},{\"preview\":\"\\t\\t\\tt.Errorf(\\\"%q: got %+v, want %+v\\\", test.data, got, test.want)\",\"lineNumber\":108,\"offsetAndLengths\":[[37,4]]},{\"preview\":\"\\t\\t\\tt.Errorf(\\\"%q: got %+v, want %+v\\\", test.data, got, test.want)\",\"lineNumber\":108,\"offsetAndLengths\":[[53,4]]},{\"preview\":\"\\t\\t\\tif test.error {\",\"lineNumber\":113,\"offsetAndLengths\":[[6,4]]},{\"preview\":\"\\t\\tif test.error {\",\"lineNumber\":119,\"offsetAndLengths\":[[5,4]]},{\"preview\":\"\\t\\t\\tt.Errorf(\\\"%q: expected error\\\", test.data)\",\"lineNumber\":120,\"offsetAndLengths\":[[34,4]]},{\"preview\":\"\\t\\tif !bytes.Equal(data, test.data) {\",\"lineNumber\":123,\"offsetAndLengths\":[[24,4]]},{\"preview\":\"\\t\\t\\tt.Errorf(\\\"got JSON %q, want %q\\\", data, test.data)\",\"lineNumber\":124,\"offsetAndLengths\":[[42,4]]}]}],\"alert\":null,\"elapsedMilliseconds\":6}}}}"
    }
}